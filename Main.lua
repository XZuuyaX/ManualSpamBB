--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome Traveler 

]]--

local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 81) then
			v19 = v0(v3(v30, 1, 1));
			return "";
		else
			local v88 = v2(v0(v30, 16));
			if v19 then
				local v108 = v5(v88, v19);
				v19 = nil;
				return v108;
			else
				return v88;
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v89 = (v31 / ((5 - 3) ^ (v32 - (2 - (1 + 0))))) % ((3 - 1) ^ (((v33 - (2 - 1)) - (v32 - 1)) + (620 - (555 + 64))));
			return v89 - (v89 % (932 - (857 + 74)));
		else
			local v90 = (809 - 241) - (367 + 201);
			local v91;
			while true do
				if (v90 == (927 - (214 + 713))) then
					v91 = (1 + 1) ^ (v32 - ((1066 - (68 + 997)) + 0));
					return (((v31 % (v91 + v91)) >= v91) and (878 - (282 + 595))) or (1637 - (1523 + (1384 - (226 + 1044))));
				end
			end
		end
	end
	local function v21()
		local v34 = (0 - 0) + 0;
		local v35;
		while true do
			if (v34 == (0 - 0)) then
				v35 = v1(v16, v18, v18);
				v18 = v18 + ((468 - (87 + 263)) - (32 + 85));
				v34 = 2 - 1;
			end
			if (v34 == (1 + 0)) then
				return v35;
			end
		end
	end
	local function v22()
		local v36, v37 = v1(v16, v18, v18 + (182 - (67 + 113)));
		v18 = v18 + 2 + 0;
		return (v37 * (628 - 372)) + v36;
	end
	local function v23()
		local v38, v39, v40, v41 = v1(v16, v18, v18 + 3 + 0);
		v18 = v18 + (15 - 11);
		return (v41 * 16777216) + (v40 * (66488 - (802 + 150))) + (v39 * 256) + v38;
	end
	local function v24()
		local v42 = 0 - 0;
		local v43;
		local v44;
		local v45;
		local v46;
		local v47;
		local v48;
		while true do
			if (v42 == (5 - 2)) then
				if (v47 == 0) then
					if (v46 == 0) then
						return v48 * (0 + 0);
					else
						local v124 = 997 - (915 + 82);
						while true do
							if (v124 == (0 - 0)) then
								v47 = 1 + 0;
								v45 = 0 - 0;
								break;
							end
						end
					end
				elseif (v47 == 2047) then
					return ((v46 == (1187 - (1069 + 118))) and (v48 * (1 / ((0 + 0) - (0 + 0))))) or (v48 * NaN);
				end
				return v8(v48, v47 - (2237 - 1214)) * (v45 + (v46 / ((1 + 1) ^ (92 - 40))));
			end
			if (v42 == (1 + (772 - (201 + 571)))) then
				v45 = 792 - (368 + 423);
				v46 = (v20(v44, (1141 - (116 + 1022)) - 2, 20) * (((83 - 63) - (10 + 8)) ^ (122 - 90))) + v43;
				v42 = 444 - (416 + 26);
			end
			if (v42 == (6 - 4)) then
				v47 = v20(v44, 10 + 11, 54 - 23);
				v48 = ((v20(v44, 470 - (145 + 293)) == (1 + 0)) and -1) or (431 - (44 + 386));
				v42 = 3;
			end
			if (v42 == (1486 - (998 + 488))) then
				v43 = v23();
				v44 = v23();
				v42 = 1;
			end
		end
	end
	local function v25(v49)
		local v50 = 0 - 0;
		local v51;
		local v52;
		while true do
			if (v50 == 1) then
				v51 = v3(v16, v18, (v18 + v49) - (3 - 2));
				v18 = v18 + v49;
				v50 = 1082 - (1020 + 60);
			end
			if (v50 == (862 - ((2561 - (760 + 987)) + (1958 - (1789 + 124))))) then
				return v6(v52);
			end
			if (v50 == ((770 - (745 + 21)) - 2)) then
				v52 = {};
				for v109 = 1 + 0, #v51 do
					v52[v109] = v2(v1(v3(v51, v109, v109)));
				end
				v50 = 2 + 1;
			end
			if (v50 == (885 - (261 + 624))) then
				v51 = nil;
				if not v49 then
					v49 = v23();
					if (v49 == (0 + 0)) then
						return "";
					end
				end
				v50 = 1 - 0;
			end
		end
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v53 = (function()
			return function(v92, v93, v94, v95, v96, v97, v98, v99, v100)
				local v101 = (function()
					return 0 - 0;
				end)();
				local v92 = (function()
					return;
				end)();
				local v93 = (function()
					return;
				end)();
				while true do
					if (v101 ~= (0 - 0)) then
					else
						local v118 = (function()
							return 0;
						end)();
						local v119 = (function()
							return;
						end)();
						while true do
							if (v118 ~= (0 - 0)) then
							else
								v119 = (function()
									return 0 + 0;
								end)();
								while true do
									if ((1 - 0) == v119) then
										v101 = (function()
											return 1 + 0;
										end)();
										break;
									end
									if (v119 ~= (0 + 0)) then
									else
										local v126 = (function()
											return 396 - (115 + 281);
										end)();
										while true do
											if (v126 == 1) then
												v119 = (function()
													return 1;
												end)();
												break;
											end
											if (v126 ~= (0 - 0)) then
											else
												v92 = (function()
													return 341 - (218 + 123);
												end)();
												v93 = (function()
													return nil;
												end)();
												v126 = (function()
													return 1 + 0;
												end)();
											end
										end
									end
								end
								break;
							end
						end
					end
					if (v101 == (1582 - (1535 + 46))) then
						local v120 = (function()
							return 0;
						end)();
						while true do
							if (v120 == 0) then
								while true do
									if (v92 == (0 - 0)) then
										v93 = (function()
											return v94();
										end)();
										if (v95(v93, #",", #"\\") ~= 0) then
										else
											local v128 = (function()
												return 0 - 0;
											end)();
											local v129 = (function()
												return;
											end)();
											local v130 = (function()
												return;
											end)();
											local v131 = (function()
												return;
											end)();
											while true do
												if (v128 == (1 + 2)) then
													if (v95(v130, #"xxx", #"nil") ~= #"}") then
													else
														v131[#"xnxx"] = (function()
															return v98[v131[#".dev"]];
														end)();
													end
													v99[v100] = (function()
														return v131;
													end)();
													break;
												end
												if ((561 - (306 + 254)) == v128) then
													v131 = (function()
														return {v96(),v96(),nil,nil};
													end)();
													if (v129 == 0) then
														local v489 = (function()
															return 867 - (550 + 317);
														end)();
														local v490 = (function()
															return;
														end)();
														while true do
															if ((0 - 0) ~= v489) then
															else
																v490 = (function()
																	return 0 - 0;
																end)();
																while true do
																	if (v490 ~= (0 - 0)) then
																	else
																		v131[#"-19"] = (function()
																			return v96();
																		end)();
																		v131[#"http"] = (function()
																			return v96();
																		end)();
																		break;
																	end
																end
																break;
															end
														end
													elseif (v129 == #"[") then
														v131[#"xnx"] = (function()
															return v97();
														end)();
													elseif (v129 == (287 - (134 + 151))) then
														v131[#"-19"] = (function()
															return v97() - ((1667 - (970 + 695)) ^ 16);
														end)();
													elseif (v129 ~= #"xxx") then
													else
														local v1548 = (function()
															return 290 - (60 + 230);
														end)();
														local v1549 = (function()
															return;
														end)();
														while true do
															if (v1548 ~= (0 - 0)) then
															else
																v1549 = (function()
																	return 1990 - (582 + 1408);
																end)();
																while true do
																	if (v1549 ~= (1456 - (282 + 1174))) then
																	else
																		v131[#"gha"] = (function()
																			return v97() - ((813 - (569 + 242)) ^ (46 - 30));
																		end)();
																		v131[#"http"] = (function()
																			return v96();
																		end)();
																		break;
																	end
																end
																break;
															end
														end
													end
													v128 = (function()
														return 2;
													end)();
												end
												if (v128 == (1 + 1)) then
													if (v95(v130, #"<", #":") ~= #"]") then
													else
														v131[1026 - (706 + 318)] = (function()
															return v98[v131[2]];
														end)();
													end
													if (v95(v130, 2, 6 - 4) == #"[") then
														v131[#"19("] = (function()
															return v98[v131[#"19("]];
														end)();
													end
													v128 = (function()
														return 1254 - (721 + 530);
													end)();
												end
												if ((0 - 0) ~= v128) then
												else
													local v133 = (function()
														return 0;
													end)();
													local v134 = (function()
														return;
													end)();
													while true do
														if ((1271 - (945 + 326)) ~= v133) then
														else
															v134 = (function()
																return 0 - 0;
															end)();
															while true do
																if (v134 == 1) then
																	v128 = (function()
																		return 1 + 0;
																	end)();
																	break;
																end
																if ((0 - 0) == v134) then
																	v129 = (function()
																		return v95(v93, 2, #"-19");
																	end)();
																	v130 = (function()
																		return v95(v93, #"asd1", 1830 - (1195 + 629));
																	end)();
																	v134 = (function()
																		return 1 - 0;
																	end)();
																end
															end
															break;
														end
													end
												end
											end
										end
										break;
									end
								end
								return v92, v93, v94, v95, v96, v97, v98, v99, v100;
							end
						end
					end
				end
			end;
		end)();
		local v54 = (function()
			return function(v102, v103, v104)
				local v105 = (function()
					return 241 - (187 + 54);
				end)();
				while true do
					if (v105 ~= (1288 - (993 + 295))) then
					else
						local v121 = (function()
							return 0 + 0;
						end)();
						while true do
							if (v121 ~= (1171 - (418 + 753))) then
							else
								local v125 = (function()
									return 780 - (162 + 618);
								end)();
								while true do
									if (v125 == 0) then
										v102[v103 - #" "] = (function()
											return v104();
										end)();
										return v102, v103, v104;
									end
								end
							end
						end
					end
				end
			end;
		end)();
		local v55 = (function()
			return {};
		end)();
		local v56 = (function()
			return {};
		end)();
		local v57 = (function()
			return {};
		end)();
		local v58 = (function()
			return {v55,v56,nil,v57};
		end)();
		local v59 = (function()
			return v23();
		end)();
		local v60 = (function()
			return {};
		end)();
		for v68 = #"]", v59 do
			local v69 = (function()
				return 0 + 0;
			end)();
			local v70 = (function()
				return;
			end)();
			local v71 = (function()
				return;
			end)();
			while true do
				if (v69 == (0 + 0)) then
					local v111 = (function()
						return 0 + 0;
					end)();
					local v112 = (function()
						return;
					end)();
					while true do
						if (v111 == (0 - 0)) then
							v112 = (function()
								return 0 - 0;
							end)();
							while true do
								if (v112 == (0 + 0)) then
									v70 = (function()
										return v21();
									end)();
									v71 = (function()
										return nil;
									end)();
									v112 = (function()
										return 530 - (406 + 123);
									end)();
								end
								if (v112 == (1637 - (1373 + 263))) then
									v69 = (function()
										return 1001 - (451 + 549);
									end)();
									break;
								end
							end
							break;
						end
					end
				end
				if (v69 == (1 + 0)) then
					if (v70 == #"~") then
						v71 = (function()
							return v21() ~= 0;
						end)();
					elseif (v70 == 2) then
						v71 = (function()
							return v24();
						end)();
					elseif (v70 == #"asd") then
						v71 = (function()
							return v25();
						end)();
					end
					v60[v68] = (function()
						return v71;
					end)();
					break;
				end
			end
		end
		v58[#"19("] = (function()
			return v21();
		end)();
		for v72 = #"/", v23() do
			FlatIdent_8F59B, Descriptor, v21, v20, v22, v23, v60, v55, v72 = (function()
				return v53(FlatIdent_8F59B, Descriptor, v21, v20, v22, v23, v60, v55, v72);
			end)();
		end
		for v73 = #"}", v23() do
			v56, v73, v28 = (function()
				return v54(v56, v73, v28);
			end)();
		end
		return v58;
	end
	local function v29(v62, v63, v64)
		local v65 = v62[1 + 0];
		local v66 = v62[2];
		local v67 = v62[8 - 5];
		return function(...)
			local v74 = v65;
			local v75 = v66;
			local v76 = v67;
			local v77 = v27;
			local v78 = 1323 - (1249 + 73);
			local v79 = -(1 + (0 - 0));
			local v80 = {};
			local v81 = {...};
			local v82 = v12("#", ...) - ((1812 - (1564 + 246)) - (346 - (124 + 221)));
			local v83 = {};
			local v84 = {};
			for v106 = (0 + 0) - 0, v82 do
				if (v106 >= v76) then
					v80[v106 - v76] = v81[v106 + (1901 - (106 + 1794))];
				else
					v84[v106] = v81[v106 + 1 + 0];
				end
			end
			local v85 = (v82 - v76) + 1 + 0;
			local v86;
			local v87;
			while true do
				local v107 = 0;
				while true do
					if ((3620 == 3620) and (v107 == (2 - 1))) then
						if (v87 <= (124 - 78)) then
							if (v87 <= (136 - (4 + 110))) then
								if (v87 <= (594 - (57 + 527))) then
									if (v87 <= (1431 - (41 + 1386))) then
										if ((2378 == 2378) and (v87 <= (104 - (17 + 86)))) then
											if (v87 == (0 + 0)) then
												local v135;
												local v136;
												v84[v86[3 - 1]] = v84[v86[8 - 5]][v86[455 - (115 + 336)]];
												v78 = v78 + (167 - (122 + 44));
												v86 = v74[v78];
												v84[v86[(3 - 1) - 0]] = v84[v86[9 - 6]][v86[4 + 0]];
												v78 = v78 + 1;
												v86 = v74[v78];
												v136 = v86[1 + 1];
												v135 = v84[v86[5 - (1 + 1)]];
												v84[v136 + (66 - (30 + (81 - (45 + 1))))] = v135;
												v84[v136] = v135[v86[3 + 1]];
												v78 = v78 + 1;
												v86 = v74[v78];
												v84[v86[1259 - (57 + 986 + 214)]] = v84[v86[1993 - (1282 + 708)]][v86[15 - 11]];
												v78 = v78 + (1213 - (323 + 889));
												v86 = v74[v78];
												v136 = v86[5 - 3];
												v84[v136] = v84[v136](v13(v84, v136 + (581 - (361 + 219)), v86[3]));
												v78 = v78 + ((1533 - (583 + 629)) - (53 + 267));
												v86 = v74[v78];
												v84[v86[1 + 1]] = v84[v86[416 - (15 + 398)]];
												v78 = v78 + (983 - (18 + 964));
												v86 = v74[v78];
												v84[v86[2]] = v86[11 - 8];
											else
												local v154 = 0 + 0;
												local v155;
												while true do
													if ((2069 <= 4346) and (v154 == (1 + 2 + 1))) then
														v86 = v74[v78];
														v155 = v86[852 - (20 + 830)];
														v84[v155] = v84[v155](v13(v84, v155 + 1, v86[(7 - 4) + 0]));
														v154 = 131 - (116 + 10);
													end
													if ((v154 == (1 + 1 + 0)) or (124 > 191)) then
														v86 = v74[v78];
														v84[v86[740 - (542 + 196)]] = v86[6 - (1173 - (943 + 227))];
														v78 = v78 + 1;
														v154 = 1 + 2;
													end
													if (v154 == (0 + 0)) then
														v155 = nil;
														v84[v86[1 + 1]] = v84[v86[7 - 4]][v86[4]];
														v78 = v78 + (2 - (1 + 0));
														v154 = 1552 - ((2757 - (1539 + 92)) + 425);
													end
													if ((v154 == ((2360 - (706 + 1240)) - (118 + 287))) or (663 > 2245)) then
														v78 = v78 + 1;
														v86 = v74[v78];
														v84[v86[2]] = v86[11 - 8];
														break;
													end
													if ((v154 == (1124 - (118 + 1003))) or (1608 == 1524)) then
														v86 = v74[v78];
														v84[v86[5 - 3]] = v86[380 - (142 + 235)];
														v78 = v78 + (4 - 3);
														v154 = (259 - (81 + 177)) + 3;
													end
													if ((581 <= 2774) and (v154 == ((2782 - 1797) - (553 + 424)))) then
														v78 = v78 + (1 - 0);
														v86 = v74[v78];
														v84[v86[2 + 0]] = v84[v86[3 + 0]][v86[3 + 1]];
														v154 = 4 + 5;
													end
													if ((3575 > 1313) and (v154 == (4 + 2))) then
														v78 = v78 + (2 - 1);
														v86 = v74[v78];
														v84[v86[5 - 3]] = v86[6 - (260 - (212 + 45))] ~= (0 + 0);
														v154 = 33 - (86 - 60);
													end
													if ((4581 >= 1179) and (v154 == (754 - (239 + 514)))) then
														v86 = v74[v78];
														v84[v86[(1947 - (708 + 1238)) + 1]] = v86[3];
														v78 = v78 + (1330 - (797 + 532));
														v154 = 2 + 0;
													end
													if ((v154 == (3 + 4)) or (4804 == 790)) then
														v78 = v78 + (2 - 1);
														v86 = v74[v78];
														v84[v86[2]] = v64[v86[1 + 2]];
														v154 = (396 + 814) - (373 + 829);
													end
													if (v154 == (736 - (476 + 255))) then
														v78 = v78 + (1131 - (369 + 761));
														v86 = v74[v78];
														v84[v86[2]][v86[2 + 1]] = v84[v86[6 - (1669 - (586 + 1081))]];
														v154 = 10 - 4;
													end
												end
											end
										elseif (v87 <= (240 - (64 + 174))) then
											if (v84[v86[1 + 1]] == v84[v86[4]]) then
												v78 = v78 + (1 - 0);
											else
												v78 = v86[339 - (144 + 192)];
											end
										elseif (v87 > (219 - (42 + 174))) then
											local v510;
											v84[v86[2 + (511 - (348 + 163))]] = v84[v86[3]][v86[4 + 0]];
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v84[v86[1 + 1]] = v86[1507 - (363 + 1141)];
											v78 = v78 + 1;
											v86 = v74[v78];
											v84[v86[1582 - (1183 + 397)]] = v86[3];
											v78 = v78 + (2 - 1);
											v86 = v74[v78];
											v84[v86[2 + 0]] = v86[(283 - (215 + 65)) + 0];
											v78 = v78 + (1976 - (1913 + 62));
											v86 = v74[v78];
											v510 = v86[2];
											v84[v510] = v84[v510](v13(v84, v510 + 1, v86[2 + (2 - 1)]));
											v78 = v78 + (2 - 1);
											v86 = v74[v78];
											v84[v86[1935 - (565 + 1368)]][v86[3]] = v84[v86[(1874 - (1541 + 318)) - 11]];
											v78 = v78 + (1662 - (1477 + 184));
											v86 = v74[v78];
											v84[v86[2]] = v86[3];
											v78 = v78 + (1 - 0);
											v86 = v74[v78];
											v78 = v86[3 + 0 + 0];
										else
											v63[v86[3]] = v84[v86[858 - (564 + 292)]];
										end
									elseif (v87 <= (11 - 4)) then
										if (v87 <= (15 - 10)) then
											local v156;
											local v157;
											v157 = v86[2];
											v156 = v84[v86[307 - (244 + 60)]];
											v84[v157 + 1 + 0 + 0] = v156;
											v84[v157] = v156[v86[480 - (41 + 435)]];
											v78 = v78 + (1002 - (938 + 63));
											v86 = v74[v78];
											v84[v86[2 + 0 + 0]] = v63[v86[1128 - (936 + 189)]];
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v84[v86[1615 - (1565 + 48)]] = v84[v86[2 + 1]][v86[1142 - (782 + 356)]];
											v78 = v78 + (268 - (176 + 91));
											v86 = v74[v78];
											v157 = v86[(1754 - (1036 + 714)) - 2];
											v84[v157] = v84[v157](v13(v84, v157 + 1, v86[4 - 1]));
											v78 = v78 + (1093 - (975 + 117));
											v86 = v74[v78];
											v84[v86[2]] = v84[v86[1878 - (157 + 1718)]];
											v78 = v78 + 1;
											v86 = v74[v78];
											for v493 = v86[2 + 0 + 0], v86[10 - (4 + 3)] do
												v84[v493] = nil;
											end
											v78 = v78 + (3 - 2);
											v86 = v74[v78];
											v84[v86[1020 - (697 + 321)]] = v86[7 - (1284 - (883 + 397))];
											v78 = v78 + ((591 - (563 + 27)) - 0);
											v86 = v74[v78];
											v78 = v86[6 - 3];
										elseif (v87 == (3 + (11 - 8))) then
											for v1009 = v86[(1989 - (1369 + 617)) - 1], v86[7 - 4] do
												v84[v1009] = nil;
											end
										else
											v84[v86[1229 - (322 + 905)]] = v84[v86[3]] + v86[615 - (602 + (1496 - (85 + 1402)))];
										end
									elseif ((v87 <= (1197 - (449 + 740))) or (283 >= 2410)) then
										local v174;
										v84[v86[2]] = v86[3];
										v78 = v78 + 1;
										v86 = v74[v78];
										v84[v86[874 - (285 + 541 + 46)]] = v86[3];
										v78 = v78 + (948 - (245 + 702));
										v86 = v74[v78];
										v84[v86[6 - 4]] = v86[(2 - 1) + 2];
										v78 = v78 + (1899 - (260 + (2041 - (274 + 129))));
										v86 = v74[v78];
										v174 = v86[442 - ((599 - (12 + 205)) + 58)];
										v84[v174] = v84[v174](v13(v84, v174 + 1, v86[9 - 6]));
										v78 = v78 + 1 + 0 + 0;
										v86 = v74[v78];
										v84[v86[2]][v86[5 - 2]] = v84[v86[11 - 7]];
										v78 = v78 + (1206 - (902 + 303));
										v86 = v74[v78];
										v84[v86[3 - 1]] = v64[v86[6 - 3]];
										v78 = v78 + 1 + 0;
										v86 = v74[v78];
										v84[v86[1692 - (1121 + 569)]] = v84[v86[217 - (22 + (744 - 552))]][v86[4]];
										v78 = v78 + (684 - (483 + 200));
										v86 = v74[v78];
										v84[v86[1465 - (1404 + 59)]] = v86[8 - 5];
										v78 = v78 + (1 - 0);
										v86 = v74[v78];
										v84[v86[767 - (468 + 297)]] = v86[(547 + 18) - (334 + (612 - (27 + 357)))];
										v78 = v78 + (3 - 2);
										v86 = v74[v78];
										v84[v86[4 - 2]] = v86[5 - 2];
									elseif (v87 > (3 + 6)) then
										local v529 = 0;
										local v530;
										while true do
											if ((2530 >= 1955) and ((236 - (141 + 95)) == v529)) then
												v530 = nil;
												v84[v86[2 + 0]] = v86[7 - 4];
												v78 = v78 + 1;
												v529 = 2 - 1;
											end
											if ((1932 == 1932) and (v529 == (1 + 0))) then
												v86 = v74[v78];
												v84[v86[5 - 3]] = v86[3 + 0];
												v78 = v78 + 1;
												v529 = 2 + 0;
											end
											if ((4 - 1) == v529) then
												v78 = v78 + 1 + 0;
												v86 = v74[v78];
												v84[v86[2]][v86[3]] = v84[v86[167 - (92 + 71)]];
												v529 = 2 + 2;
											end
											if (v529 == 2) then
												v86 = v74[v78];
												v530 = v86[2 - 0];
												v84[v530] = v84[v530](v13(v84, v530 + ((1246 - (91 + 389)) - ((871 - (90 + 207)) + 191)), v86[1 + 2 + 0]));
												v529 = 3;
											end
											if (v529 == (9 - 5)) then
												v78 = v78 + (862 - (706 + 155)) + 0;
												v86 = v74[v78];
												v84[v86[851 - (254 + 595)]] = v86[129 - (55 + 71)];
												break;
											end
										end
									elseif (v84[v86[(1797 - (730 + 1065)) - (1563 - (1339 + 224))]] == v86[1794 - (573 + 1217)]) then
										v78 = v78 + ((2 + 0) - (1 + 0));
									else
										v78 = v86[(1 - 0) + 2];
									end
								elseif (v87 <= (25 - 9)) then
									if (v87 <= (952 - (714 + 225))) then
										if (v87 <= (32 - 21)) then
											local v195;
											v84[v86[2 - 0]] = v84[v86[1 + 2]][v86[4]];
											v78 = v78 + (1 - 0);
											v86 = v74[v78];
											v84[v86[808 - (118 + (1531 - (268 + 575)))]] = v86[3];
											v78 = v78 + (49 - (25 + 23));
											v86 = v74[v78];
											v84[v86[1 + 1]] = v86[1889 - (927 + 959)];
											v78 = v78 + ((1297 - (919 + 375)) - 2);
											v86 = v74[v78];
											v84[v86[734 - (16 + 716)]] = v86[(13 - 8) - 2];
											v78 = v78 + 1;
											v86 = v74[v78];
											v195 = v86[(1070 - (180 + 791)) - (11 + (1891 - (323 + 1482)))];
											v84[v195] = v84[v195](v13(v84, v195 + (2 - 1), v86[288 - (175 + 110)]));
											v78 = v78 + (2 - 1);
											v86 = v74[v78];
											v84[v86[2]][v86[14 - 11]] = v84[v86[(3718 - (1177 + 741)) - (503 + 1293)]];
											v78 = v78 + (2 - 1);
											v86 = v74[v78];
											v84[v86[1 + 1]] = v64[v86[3 + 0]];
											v78 = v78 + (3 - 2);
											v86 = v74[v78];
											v84[v86[1063 - (810 + 251)]] = v84[v86[3 + 0]][v86[2 + 2]];
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v84[v86[535 - (43 + 490)]] = v86[(284 + 452) - (711 + 22)];
											v78 = v78 + 1;
											v86 = v74[v78];
											v84[v86[7 - (11 - 6)]] = v86[862 - (240 + 619)];
										elseif ((889 <= 2417) and (v87 == (3 + 1 + 8))) then
											local v531;
											local v532;
											v84[v86[2]] = v86[4 - 1];
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v84[v86[2]] = v86[1747 - (1344 + 400)];
											v78 = v78 + 1;
											v86 = v74[v78];
											v532 = v86[2];
											v84[v532] = v84[v532](v13(v84, v532 + (406 - (255 + 150)), v86[112 - (96 + 13)]));
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v84[v86[(1923 - (962 + 959)) + 0]] = v84[v86[12 - 9]];
											v78 = v78 + (3 - 2);
											v86 = v74[v78];
											v84[v86[1741 - (404 + 1335)]] = v86[3];
											v78 = v78 + (407 - (183 + 223));
											v86 = v74[v78];
											v84[v86[2 - (0 - 0)]] = v86[2 + 1] ~= (0 + 0);
											v78 = v78 + (338 - (10 + 58 + 269));
											v86 = v74[v78];
											v84[v86[2 + (1351 - (461 + 890))]] = v84[v86[3]][v86[(251 + 91) - ((459 - 341) + 220)]];
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v532 = v86[2];
											v531 = v84[v86[452 - (108 + 341)]];
											v84[v532 + 1 + 0] = v531;
											v84[v532] = v531[v86[16 - 12]];
										else
											local v549 = v86[1495 - (711 + 782)];
											v84[v549](v84[v549 + (1 - 0)]);
										end
									elseif (v87 <= (483 - (270 + 199))) then
										local v216 = v86[(244 - (19 + 224)) + 1];
										v84[v216] = v84[v216](v13(v84, v216 + (1820 - (580 + 1123 + 116)), v86[201 - (37 + 161)]));
									elseif (v87 == 15) then
										local v550;
										local v551, v552;
										local v553;
										v84[v86[2]] = v84[v86[8 - 5]];
										v78 = v78 + 1 + 0 + 0;
										v86 = v74[v78];
										v84[v86[1 + 1]] = v63[v86[2 + 1]];
										v78 = v78 + (2 - 1);
										v86 = v74[v78];
										v84[v86[2 + 0]] = v63[v86[1170 - (645 + 522)]];
										v78 = v78 + 1;
										v86 = v74[v78];
										v84[v86[2]] = v63[v86[1793 - (1010 + 780)]];
										v78 = v78 + 1;
										v86 = v74[v78];
										v84[v86[2 + 0]] = v63[v86[(6 + 8) - 11]];
										v78 = v78 + (2 - 1);
										v86 = v74[v78];
										v84[v86[(1813 + 25) - (1045 + 791)]] = v84[v86[7 - 4]];
										v78 = v78 + (1 - 0);
										v86 = v74[v78];
										v84[v86[507 - (351 + 154)]] = v84[v86[3]];
										v78 = v78 + ((1636 - (60 + 1)) - (1281 + 293));
										v86 = v74[v78];
										v84[v86[268 - (28 + 238)]] = v84[v86[3]] + v86[8 - 4];
										v78 = v78 + 1;
										v86 = v74[v78];
										v553 = v86[1561 - (1381 + 178)];
										v551, v552 = v77(v84[v553](v13(v84, v553 + (924 - (826 + 97)) + 0, v86[3])));
										v79 = (v552 + v553) - (1 + 0);
										v550 = 0 + 0 + 0;
										for v1011 = v553, v79 do
											v550 = v550 + (3 - 2);
											v84[v1011] = v551[v550];
										end
										v78 = v78 + 1 + 0;
										v86 = v74[v78];
										v553 = v86[2];
										v84[v553] = v84[v553](v13(v84, v553 + ((1692 - 1221) - ((784 - 403) + 89)), v79));
										v78 = v78 + 1 + 0;
										v86 = v74[v78];
										v84[v86[2 + 0]] = v63[v86[(689 - (375 + 310)) - 1]];
										v78 = v78 + ((3156 - (1864 + 135)) - (1074 + 82));
										v86 = v74[v78];
										v84[v86[3 - 1]] = v63[v86[3]];
										v78 = v78 + (1785 - (214 + 1570));
										v86 = v74[v78];
										v84[v86[1457 - (990 + 465)]] = v84[v86[2 + 1]];
										v78 = v78 + 1 + (0 - 0);
										v86 = v74[v78];
										v84[v86[2 + 0 + 0]] = #v84[v86[11 - 8]];
										v78 = v78 + (1727 - (1668 + 58));
										v86 = v74[v78];
										v84[v86[2]] = v84[v86[629 - (512 + 114)]] % v84[v86[10 - 6]];
										v78 = v78 + (1 - 0);
										v86 = v74[v78];
										v84[v86[(3 + 3) - 4]] = v86[3] + v84[v86[2 + 2]];
										v78 = v78 + (2 - 1) + 0;
										v86 = v74[v78];
										v84[v86[2]] = #v84[v86[3 + 0]];
										v78 = v78 + (3 - (1133 - (314 + 817)));
										v86 = v74[v78];
										v84[v86[2]] = v84[v86[1997 - (109 + 1885)]] % v84[v86[1473 - (1269 + 200)]];
										v78 = v78 + (1 - 0);
										v86 = v74[v78];
										v84[v86[817 - (98 + 717)]] = v86[829 - (802 + 24)] + v84[v86[6 - 2]];
										v78 = v78 + (1 - 0);
										v86 = v74[v78];
										v84[v86[1 + 1]] = v84[v86[2 + 1]] + v86[4 + 0];
										v78 = v78 + 1 + 0;
										v86 = v74[v78];
										v553 = v86[2];
										v551, v552 = v77(v84[v553](v13(v84, v553 + 1, v86[1 + 2])));
										v79 = (v552 + v553) - (2 - (215 - (32 + 182)));
										v550 = 0;
										for v1014 = v553, v79 do
											v550 = v550 + 1;
											v84[v1014] = v551[v550];
										end
										v78 = v78 + (3 - 2);
										v86 = v74[v78];
										v553 = v86[2];
										v551, v552 = v77(v84[v553](v13(v84, v553 + 1 + 0, v79)));
										v79 = (v552 + v553) - (1 + 0);
										v550 = 0 + 0 + 0;
										for v1017 = v553, v79 do
											local v1018 = 0 + 0;
											while true do
												if (((0 + 0) == v1018) or (1496 > 2249)) then
													v550 = v550 + ((5011 - 3577) - (797 + 636));
													v84[v1017] = v551[v550];
													break;
												end
											end
										end
										v78 = v78 + (4 - 3);
										v86 = v74[v78];
										v553 = v86[1621 - (1427 + (257 - (39 + 26)))];
										v84[v553] = v84[v553](v13(v84, v553 + 1, v79));
										v78 = v78 + 1 + 0;
										v86 = v74[v78];
										v84[v86[4 - 2]] = v84[v86[3]] % v86[4 + 0];
										v78 = v78 + (145 - (54 + 90)) + (198 - (45 + 153));
										v86 = v74[v78];
										v553 = v86[328 - (192 + 134)];
										v551, v552 = v77(v84[v553](v84[v553 + ((775 + 502) - (316 + 960))]));
										v79 = (v552 + v553) - ((553 - (457 + 95)) + 0);
										v550 = 0 + 0 + 0;
										for v1019 = v553, v79 do
											v550 = v550 + (1 - 0) + 0;
											v84[v1019] = v551[v550];
										end
										v78 = v78 + 1;
										v86 = v74[v78];
										v553 = v86[7 - 5];
										v84[v553](v13(v84, v553 + 1, v79));
									else
										local v583 = 551 - (83 + 468);
										local v584;
										while true do
											if ((v583 == (1809 - ((2904 - 1702) + 604))) or (2981 <= 333)) then
												v78 = v78 + (4 - 3);
												v86 = v74[v78];
												v84[v86[(7 - 5) - 0]] = v86[8 - 5];
												v78 = v78 + (326 - (45 + 280));
												v86 = v74[v78];
												v84[v86[2]] = v86[3 + 0];
												v583 = 4 + 0;
											end
											if (2 == v583) then
												v78 = v78 + 1 + 0;
												v86 = v74[v78];
												v84[v86[2]] = v64[v86[2 + 1]];
												v78 = v78 + (3 - 2) + 0;
												v86 = v74[v78];
												v84[v86[(2 - 1) + 1]] = v84[v86[3]][v86[4]];
												v583 = 3;
											end
											if ((364 <= 4940) and (v583 == (749 - (485 + 263)))) then
												v86 = v74[v78];
												v584 = v86[3 - 1];
												v84[v584] = v84[v584](v13(v84, v584 + (1912 - (340 + 1571)), v86[2 + 1]));
												v78 = v78 + (1773 - ((2440 - (575 + 132)) + 39));
												v86 = v74[v78];
												v84[v86[5 - 3]][v86[3]] = v84[v86[1038 - ((986 - (750 + 111)) + (1919 - (445 + 565)))]];
												v583 = 1950 - (1096 + 852);
											end
											if (v583 == (3 + 2 + 0)) then
												v84[v584] = v84[v584](v13(v84, v584 + (1 - 0), v86[3 + 0]));
												break;
											end
											if ((2265 > 522) and (v583 == (512 - (409 + 103)))) then
												v584 = nil;
												v84[v86[2]] = v86[3];
												v78 = v78 + (237 - (46 + 190));
												v86 = v74[v78];
												v84[v86[2]] = v86[(15 + 83) - (51 + 44)];
												v78 = v78 + 1 + 0;
												v583 = (2328 - 1010) - (1114 + 203);
											end
											if ((730 - (228 + 498)) == v583) then
												v78 = v78 + 1 + 0;
												v86 = v74[v78];
												v84[v86[2 + 0]] = v86[666 - (174 + 489)];
												v78 = v78 + (2 - 1);
												v86 = v74[v78];
												v584 = v86[2];
												v583 = 1910 - (830 + 1075);
											end
										end
									end
								elseif (v87 <= (543 - (303 + 74 + 147))) then
									if (v87 <= (1286 - (231 + 1038))) then
										v84[v86[2 + 0]] = {};
										v78 = v78 + 1;
										v86 = v74[v78];
										v84[v86[1164 - (171 + (1301 - (189 + 121)))]] = v64[v86[12 - (3 + 6)]];
										v78 = v78 + 1;
										v86 = v74[v78];
										v84[v86[5 - 3]] = v84[v86[7 - 4]][v86[4]];
										v78 = v78 + 1 + 0;
										v86 = v74[v78];
										v84[v86[6 - 4]] = v64[v86[8 - 5]];
										v78 = v78 + ((1348 - (634 + 713)) - 0);
										v86 = v74[v78];
										v84[v86[6 - 4]] = v84[v86[1251 - (111 + 1137)]][v86[162 - (91 + 67)]];
										v78 = v78 + (2 - 1);
										v86 = v74[v78];
										v84[v86[1 + 1]] = v64[v86[526 - ((961 - (493 + 45)) + 100)]];
										v78 = v78 + (969 - (493 + 475));
										v86 = v74[v78];
										v84[v86[1 + 1]] = v84[v86[7 - 4]][v86[3 + 1]];
										v78 = v78 + (772 - (326 + 445));
										v86 = v74[v78];
										v84[v86[8 - 6]] = v64[v86[6 - 3]];
										v78 = v78 + 1;
										v86 = v74[v78];
										if not v84[v86[4 - 2]] then
											v78 = v78 + 1;
										else
											v78 = v86[1 + 2];
										end
									elseif (v87 > (729 - (530 + 181))) then
										local v586 = 784 - (158 + 626);
										while true do
											if ((4152 >= 1643) and (v586 == 0)) then
												v84[v86[883 - (614 + 267)]] = v63[v86[35 - (19 + 13)]];
												v78 = v78 + (1 - 0);
												v86 = v74[v78];
												v84[v86[4 - 2]][v86[3]] = v84[v86[11 - 7]];
												v586 = 1 + 0;
											end
											if (1 == v586) then
												v78 = v78 + (1 - 0);
												v86 = v74[v78];
												v84[v86[3 - (1 + 0)]] = v63[v86[1815 - (1293 + 519)]];
												v78 = v78 + (1 - 0);
												v586 = 2;
											end
											if ((2810 >= 2165) and (v586 == ((11 - 4) - 4))) then
												v84[v86[2]] = v86[3];
												v78 = v78 + (1 - (0 + 0));
												v86 = v74[v78];
												v78 = v86[12 - 9];
												break;
											end
											if ((4693 > 2870) and (v586 == (4 - 2))) then
												v86 = v74[v78];
												v84[v86[2 + 0 + 0]][v86[1 + 2]] = v86[4];
												v78 = v78 + 1;
												v86 = v74[v78];
												v586 = 6 - 3;
											end
										end
									else
										v84[v86[1 + 1]] = v84[v86[3]][v84[v86[2 + 2]]];
									end
								elseif (v87 <= (13 + (1098 - (1035 + 56)))) then
									local v232 = v75[v86[3]];
									local v233;
									local v234 = {};
									v233 = v10({}, {__index=function(v495, v496)
										local v497 = 1096 - (709 + 387);
										local v498;
										while true do
											if (v497 == (1858 - (673 + 1185))) then
												v498 = v234[v496];
												return v498[2 - 1][v498[2]];
											end
										end
									end,__newindex=function(v499, v500, v501)
										local v502 = 0 - 0;
										local v503;
										while true do
											if (v502 == 0) then
												v503 = v234[v500];
												v503[1 - 0][v503[2 + 0]] = v501;
												break;
											end
										end
									end});
									for v504 = 1 + 0 + 0, v86[5 - 1] do
										v78 = v78 + 1 + 0;
										local v505 = v74[v78];
										if ((357 <= 3812) and (v505[1 - 0] == (80 - 39))) then
											v234[v504 - (1881 - (446 + 1434))] = {v84,v505[1850 - (559 + 1288)]};
										else
											v234[v504 - (1932 - (609 + 1322))] = {v63,v505[7 - 4]};
										end
										v83[#v83 + (4 - 3)] = v234;
									end
									v84[v86[1 + 1]] = v29(v232, v233, v64);
								elseif (v87 > 21) then
									local v589 = 0 - 0;
									local v590;
									while true do
										if (v589 == (1 + 1)) then
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v84[v86[5 - (3 - 0)]] = v86[2 + 1];
											v78 = v78 + (1 - 0);
											v589 = 2 + 1;
										end
										if ((1186 == 1186) and (v589 == (0 + 0))) then
											v590 = nil;
											v84[v86[2 + 0]] = v84[v86[3 + 0]];
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v589 = 434 - ((1031 - (827 + 51)) + 280);
										end
										if (v589 == ((50 - 31) - (7 + 5))) then
											v86 = v74[v78];
											v84[v86[2 + 0]] = v64[v86[2 + 1]];
											break;
										end
										if (v589 == (4 + 2)) then
											v78 = v78 + (474 - (95 + 378));
											v86 = v74[v78];
											v84[v86[2 + 0]][v86[3]] = v84[v86[3 + 1]];
											v78 = v78 + ((1 + 0) - 0);
											v589 = 5 + 2;
										end
										if ((v589 == 4) or (586 == 611)) then
											v84[v86[669 - (89 + 578)]] = v86[3];
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v84[v86[(4 - 1) - 1]] = v86[1052 - (572 + 477)];
											v589 = 5;
										end
										if (v589 == 1) then
											v84[v86[1 + 1]] = v64[v86[2 + 1]];
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v84[v86[88 - (84 + 2 + 0)]] = v84[v86[3]][v86[6 - 2]];
											v589 = 2;
										end
										if ((v589 == 3) or (4778 < 99)) then
											v86 = v74[v78];
											v84[v86[1013 - (334 + 677)]] = v86[3];
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v589 = 4;
										end
										if ((847 - (497 + 345)) == v589) then
											v78 = v78 + (3 - 2) + 0;
											v86 = v74[v78];
											v590 = v86[(1057 - (1049 + 7)) + 1];
											v84[v590] = v84[v590](v13(v84, v590 + (1334 - ((2641 - 2036) + 728)), v86[3]));
											v589 = 5 + 1;
										end
									end
								else
									local v591 = 0;
									local v592;
									while true do
										if ((v591 == ((0 - 0) - 0)) or (2025 >= 4681)) then
											v592 = nil;
											v84[v86[2]] = v84[v86[3]][v86[4]];
											v78 = v78 + 1 + 0;
											v591 = 3 - 2;
										end
										if (v591 == (1 + 0)) then
											v86 = v74[v78];
											v84[v86[5 - 3]] = v84[v86[3]][v86[4]];
											v78 = v78 + 1 + 0;
											v591 = 491 - (457 + 32);
										end
										if ((1561 < 2644) and (v591 == (2 + 2))) then
											v78 = v78 + (1403 - (832 + 570));
											v86 = v74[v78];
											v84[v86[2 + 0]] = v84[v86[1 + 2]];
											v591 = 5;
										end
										if (v591 == 8) then
											v78 = v78 + (3 - 2);
											v86 = v74[v78];
											v84[v86[1 + 1]] = v86[(250 + 549) - (588 + 208)];
											v591 = 24 - 15;
										end
										if ((44 <= 3142) and (v591 == (1806 - (884 + (2455 - 1539))))) then
											v78 = v78 + 1;
											v86 = v74[v78];
											v84[v86[3 - 1]] = v84[v86[2 + (1 - 0)]][v86[4]];
											v591 = 660 - (104 + 128 + 421);
										end
										if (v591 == 2) then
											v86 = v74[v78];
											v84[v86[1891 - (1569 + 320)]] = v84[v86[1 + 2]];
											v78 = v78 + 1 + 0;
											v591 = 9 - 6;
										end
										if (v591 == (614 - (316 + 289))) then
											v78 = v78 + (2 - 1);
											v86 = v74[v78];
											v84[v86[1 + 1]] = v86[3];
											break;
										end
										if (v591 == (1458 - ((2086 - (1004 + 416)) + 787))) then
											v78 = v78 + (426 - (360 + 65));
											v86 = v74[v78];
											v84[v86[2]] = v64[v86[3 + 0]];
											v591 = 260 - (79 + 175);
										end
										if (v591 == (1960 - (1621 + 336))) then
											v86 = v74[v78];
											v592 = v86[2 - (1939 - (337 + 1602))];
											v84[v592] = v84[v592](v13(v84, v592 + 1 + 0, v86[8 - (1522 - (1014 + 503))]));
											v591 = 7 - 3;
										end
										if (v591 == 7) then
											v78 = v78 + (900 - (503 + 396));
											v86 = v74[v78];
											v84[v86[2]] = v86[184 - ((1107 - (446 + 569)) + 89)];
											v591 = 8;
										end
									end
								end
							elseif (v87 <= 34) then
								if ((v87 <= (53 - 25)) or (1817 >= 4076)) then
									if (v87 <= (2 + 23)) then
										if (v87 <= 23) then
											v84[v86[2]] = v63[v86[2 + 1]];
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v84[v86[7 - 5]] = not v84[v86[1 + 2]];
											v78 = v78 + (2 - 1);
											v86 = v74[v78];
											v84[v86[5 - 3]][v86[3 + 0]] = v84[v86[2 + 1 + 1]];
											v78 = v78 + (2 - 1);
											v86 = v74[v78];
											v84[v86[(1 - 0) + 1]] = v63[v86[(1 + 3) - 1]];
											v78 = v78 + (1245 - (485 + 759));
											v86 = v74[v78];
											v84[v86[2]] = v63[v86[6 - 3]];
											v78 = v78 + (1190 - (442 + 747));
											v86 = v74[v78];
											if ((4522 >= 234) and v84[v86[1137 - (832 + 303)]]) then
												v78 = v78 + ((1452 - (223 + 282)) - (88 + 858));
											else
												v78 = v86[1 + 2];
											end
										elseif (v87 == (20 + 4)) then
											local v594 = v86[1 + 1];
											local v595 = {};
											for v1024 = 790 - (766 + 23), #v83 do
												local v1025 = v83[v1024];
												for v1094 = 0, #v1025 do
													local v1095 = 0;
													local v1096;
													local v1097;
													local v1098;
													while true do
														if ((4624 > 1588) and ((0 - 0) == v1095)) then
															v1096 = v1025[v1094];
															v1097 = v1096[1 - 0];
															v1095 = 2 - 1;
														end
														if (v1095 == (3 - 2)) then
															v1098 = v1096[1075 - (1036 + 37)];
															if ((v1097 == v84) and (v1098 >= v594)) then
																local v1560 = 0;
																while true do
																	if ((v1560 == (0 + 0)) or (1101 >= 2067)) then
																		v595[v1098] = v1097[v1098];
																		v1096[1 - 0] = v595;
																		break;
																	end
																end
															end
															break;
														end
													end
												end
											end
										else
											local v596 = 0 + 0;
											local v597;
											local v598;
											local v599;
											local v600;
											while true do
												if (v596 == (1480 - (641 + 839))) then
													v597 = v86[915 - (27 + 883 + 3)];
													v598, v599 = v77(v84[v597](v84[v597 + (2 - (1 - 0))]));
													v596 = 1685 - (1466 + (317 - 99));
												end
												if (v596 == 1) then
													v79 = (v599 + v597) - 1;
													v600 = 0;
													v596 = 2;
												end
												if (v596 == ((671 - (623 + 47)) + 1)) then
													for v1534 = v597, v79 do
														v600 = v600 + (1149 - (556 + 592));
														v84[v1534] = v598[v600];
													end
													break;
												end
											end
										end
									elseif (v87 <= (10 + 16)) then
										local v245;
										v84[v86[810 - (329 + 479)]] = v84[v86[857 - (174 + 680)]][v86[13 - 9]];
										v78 = v78 + (1 - 0);
										v86 = v74[v78];
										v84[v86[2 + 0]] = v86[742 - (396 + 343)];
										v78 = v78 + 1 + 0;
										v86 = v74[v78];
										v84[v86[1479 - (29 + 1448)]] = v86[1392 - (135 + 1254)];
										v78 = v78 + 1;
										v86 = v74[v78];
										v84[v86[7 - 5]] = v86[13 - (55 - (32 + 13))];
										v78 = v78 + 1 + 0;
										v86 = v74[v78];
										v245 = v86[2 + 0];
										v84[v245] = v84[v245](v13(v84, v245 + (1528 - (389 + 1138)), v86[3]));
										v78 = v78 + 1;
										v86 = v74[v78];
										v84[v86[576 - (102 + 472)]][v86[3 + 0]] = v84[v86[3 + 0 + 1]];
										v78 = v78 + 1 + 0;
										v86 = v74[v78];
										v84[v86[1547 - (320 + 1225)]] = v64[v86[5 - (1803 - (1070 + 731))]];
										v78 = v78 + 1 + 0;
										v86 = v74[v78];
										v84[v86[1466 - (157 + 1307)]] = v84[v86[1862 - (821 + 992 + 46)]][v86[9 - 5]];
										v78 = v78 + 1 + 0;
										v86 = v74[v78];
										v84[v86[3 - 1]] = v84[v86[2 + 1]][v86[4]];
										v78 = v78 + (2 - 1);
										v86 = v74[v78];
										v84[v86[1028 - (834 + 192)]] = v84[v86[1 + 2]];
									elseif ((v87 > (7 + 20)) or (122 >= 2949)) then
										local v601 = 0 + 0;
										local v602;
										while true do
											if (v601 == ((1408 - (1257 + 147)) - (1 + 0))) then
												v86 = v74[v78];
												v602 = v86[306 - (300 + 4)];
												v84[v602] = v84[v602](v13(v84, v602 + 1 + 0, v86[7 - 4]));
												v78 = v78 + (363 - (112 + (478 - 228)));
												v601 = 2 + 2;
											end
											if ((3995 == 3995) and (v601 == (14 - (141 - (98 + 35))))) then
												v78 = v78 + 1 + 0;
												v86 = v74[v78];
												v84[v86[2]] = v86[2 + 1];
												v78 = v78 + 1 + 0;
												v601 = 4 + 3;
											end
											if ((6 + 1) == v601) then
												v86 = v74[v78];
												v84[v86[1416 - (1001 + 413)]] = v86[6 - 3];
												break;
											end
											if ((887 - (244 + 638)) == v601) then
												v84[v86[695 - (627 + 28 + 38)]] = v64[v86[3]];
												v78 = v78 + 1;
												v86 = v74[v78];
												v84[v86[5 - 3]] = v84[v86[3]][v86[4]];
												v601 = 608 - (512 + 90);
											end
											if (v601 == 0) then
												v602 = nil;
												v84[v86[2]] = v84[v86[1909 - (1665 + 241)]][v86[13 - 9]];
												v78 = v78 + 1;
												v86 = v74[v78];
												v601 = 718 - (373 + 344);
											end
											if (v601 == (1 + 1)) then
												v78 = v78 + 1 + 0;
												v86 = v74[v78];
												v84[v86[5 - 3]] = v86[4 - 1];
												v78 = v78 + (1100 - (35 + 1064));
												v601 = 3 + 0;
											end
											if ((v601 == ((6 - 4) - (1 + 0))) or (2388 <= 1882)) then
												v84[v86[1 + 1]] = v86[3];
												v78 = v78 + 1;
												v86 = v74[v78];
												v84[v86[1238 - (298 + 938)]] = v86[1262 - (206 + 27 + 1026)];
												v601 = 2;
											end
											if (v601 == ((732 + 938) - ((1193 - (395 + 162)) + 1030))) then
												v86 = v74[v78];
												v84[v86[2]][v86[2 + 0 + 1]] = v84[v86[4]];
												v78 = v78 + 1 + 0;
												v86 = v74[v78];
												v601 = 2 + 3;
											end
										end
									else
										local v603;
										v84[v86[1 + 1]] = v63[v86[3]];
										v78 = v78 + (222 - (55 + 166));
										v86 = v74[v78];
										v84[v86[2]] = v84[v86[1 + 2]][v86[4]];
										v78 = v78 + 1 + 0;
										v86 = v74[v78];
										v84[v86[7 - 5]][v86[300 - (36 + 261)]] = v84[v86[6 - 2]];
										v78 = v78 + 1;
										v86 = v74[v78];
										v84[v86[1370 - (34 + 1334)]] = v63[v86[2 + 1]];
										v78 = v78 + 1 + 0;
										v86 = v74[v78];
										v84[v86[1285 - (1035 + (2189 - (816 + 1125)))]] = v64[v86[3]];
										v78 = v78 + (22 - (20 + 1));
										v86 = v74[v78];
										v84[v86[2 + 0]] = v84[v86[322 - (134 + 185)]][v86[1137 - (549 + 584)]];
										v78 = v78 + ((978 - 292) - (314 + 371));
										v86 = v74[v78];
										v84[v86[6 - 4]] = v86[3];
										v78 = v78 + (969 - (478 + 490));
										v86 = v74[v78];
										v84[v86[2]] = v86[2 + 1];
										v78 = v78 + (1173 - (786 + 386));
										v86 = v74[v78];
										v84[v86[2]] = v86[9 - 6];
										v78 = v78 + 1;
										v86 = v74[v78];
										v603 = v86[1381 - (1055 + 324)];
										v84[v603] = v84[v603](v13(v84, v603 + (1341 - (1093 + 247)), v86[3]));
										v78 = v78 + 1 + 0;
										v86 = v74[v78];
										v84[v86[1 + 1]][v86[11 - 8]] = v84[v86[4]];
										v78 = v78 + (3 - 2);
										v86 = v74[v78];
										v78 = v86[8 - 5];
									end
								elseif (v87 <= 31) then
									if (v87 <= 29) then
										local v267 = v86[4 - 2];
										v84[v267] = v84[v267](v13(v84, v267 + 1 + 0, v79));
									elseif (v87 == (115 - (1233 - (701 + 447)))) then
										v84[v86[2]][v86[10 - (10 - 3)]] = v86[4 + 0];
									else
										local v628 = (0 - 0) - 0;
										local v629;
										while true do
											if ((692 - (364 + 324)) == v628) then
												v629 = v86[5 - 3];
												v84[v629] = v84[v629](v13(v84, v629 + (2 - 1), v86[3]));
												v78 = v78 + 1 + 0;
												v86 = v74[v78];
												v628 = 5;
											end
											if (v628 == ((1365 - (391 + 950)) - 18)) then
												v78 = v78 + (1 - 0);
												v86 = v74[v78];
												v84[v86[5 - 3]] = v64[v86[1271 - ((3365 - 2116) + (47 - 28))]];
												v78 = v78 + 1 + 0;
												v628 = 27 - 20;
											end
											if (v628 == (1089 - (686 + 400))) then
												v86 = v74[v78];
												v84[v86[2 + 0]] = v86[232 - (73 + 156)];
												v78 = v78 + 1;
												v86 = v74[v78];
												v628 = 1 + 3;
											end
											if (((811 - (721 + 90)) == v628) or (3507 < 2485)) then
												v629 = nil;
												v84[v86[2]] = v64[v86[1 + 2]];
												v78 = v78 + 1;
												v86 = v74[v78];
												v628 = 3 - 2;
											end
											if (v628 == (475 - (224 + 246))) then
												v84[v86[2 - 0]][v86[5 - 2]] = v84[v86[1 + 3]];
												v78 = v78 + (2 - 1) + 0;
												v86 = v74[v78];
												v84[v86[2 + 0]][v86[5 - 2]] = v86[(9 + 3) - 8];
												v628 = 6;
											end
											if (v628 == (515 - (119 + 84 + 310))) then
												v78 = v78 + 1;
												v86 = v74[v78];
												v84[v86[1995 - (1238 + 755)]] = v86[10 - 7];
												v78 = v78 + 1 + 0;
												v628 = 1525 - (251 + 1271);
											end
											if (v628 == (1535 - (709 + 825))) then
												v84[v86[3 - (1 + 0)]] = v84[v86[3]][v86[4]];
												v78 = v78 + ((2 - 1) - (0 - 0));
												v86 = v74[v78];
												v84[v86[866 - (196 + 668)]] = v86[11 - 8];
												v628 = (4 - 1) - 1;
											end
											if (v628 == 7) then
												v86 = v74[v78];
												v84[v86[835 - (171 + 662)]] = v84[v86[96 - (4 + 89)]][v86[4]];
												break;
											end
										end
									end
								elseif (v87 <= (111 - 79)) then
									v84[v86[1 + (1260 - (1147 + 112))]] = v63[v86[13 - 10]];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[1 + 1]] = v84[v86[1489 - (35 + 1451)]][v86[1457 - (28 + 1425)]];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[1995 - (941 + 263 + 789)]] = not v84[v86[3 + 0]];
									v78 = v78 + (1515 - (822 + 692));
									v86 = v74[v78];
									v84[v86[2]][v86[3]] = v84[v86[7 - 3]];
									v78 = v78 + ((1 + 0) - 0);
									v86 = v74[v78];
									v84[v86[2]] = v63[v86[3]];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[1 + 1]] = v63[v86[3]];
									v78 = v78 + (698 - (335 + 362));
									v86 = v74[v78];
									v84[v86[299 - (45 + 252)]] = v84[v86[3 + 0]][v86[2 + 2]];
									v78 = v78 + (2 - (1 + 0));
									v86 = v74[v78];
									if v84[v86[435 - ((171 - 57) + (870 - 551))]] then
										v78 = v78 + (1 - 0);
									else
										v78 = v86[3];
									end
								elseif (v87 == (41 - (29 - 21))) then
									local v631;
									local v632;
									v84[v86[2]] = v63[v86[2 + 1]];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[2 - (0 - 0)]] = v84[v86[(14 - 9) - 2]][v86[1967 - (556 + 1407)]];
									v78 = v78 + (1207 - (741 + 465));
									v86 = v74[v78];
									v84[v86[467 - (170 + 295)]] = v84[v86[2 + 1]][v86[4]];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[4 - (568 - (237 + 329))]] = v63[v86[3 + 0]];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[2 + 0]] = v84[v86[1233 - (957 + 273)]][v86[(7 - 5) + 2]];
									v78 = v78 + 1 + 0 + 0;
									v86 = v74[v78];
									v84[v86[(4 + 3) - 5]] = v84[v86[7 - 4]][v86[11 - (1131 - (408 + 716))]];
									v78 = v78 + (4 - 3);
									v86 = v74[v78];
									v84[v86[2]] = v86[1783 - (389 + 1391)];
									v78 = v78 + 1 + (0 - 0);
									v86 = v74[v78];
									v84[v86[1 + 1]] = v86[6 - 3] ~= 0;
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[953 - (783 + 168)]] = v64[v86[(830 - (344 + 477)) - 6]];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[313 - (53 + 256 + 2)]] = v86[9 - (1767 - (1188 + 573))];
									v78 = v78 + (1213 - (1090 + 122));
									v86 = v74[v78];
									v632 = v86[1 + 1];
									v84[v632](v13(v84, v632 + (3 - 2), v86[3]));
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v632 = v86[1120 - (628 + 490)];
									v631 = v84[v86[1 + 2]];
									v84[v632 + (2 - (2 - 1))] = v631;
									v84[v632] = v631[v86[18 - 14]];
									v78 = v78 + (775 - (420 + 11 + (1112 - 769)));
									v86 = v74[v78];
									v84[v86[2]] = v63[v86[3]];
									v78 = v78 + (1 - 0);
									v86 = v74[v78];
									v84[v86[5 - 3]] = v84[v86[3 + 0]][v86[1 + 3]];
									v78 = v78 + ((2621 - 925) - (556 + 1139));
									v86 = v74[v78];
									v84[v86[2]] = v84[v86[18 - (6 + 9)]][v86[4]];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[2]] = v63[v86[3]];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[171 - (28 + 141)]] = v84[v86[3]][v86[2 + 2]];
									v78 = v78 + (1 - 0);
									v86 = v74[v78];
									v84[v86[4 - 2]] = v84[v86[3 + 0]][v86[1321 - (486 + (2360 - (508 + 1021)))]];
									v78 = v78 + (2 - 1);
									v86 = v74[v78];
									v84[v86[6 - 4]] = v86[1 + 2];
									v78 = v78 + (3 - 2);
									v86 = v74[v78];
									v84[v86[1265 - (668 + 595)]] = v86[3 + 0] ~= (0 + 0);
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[2]] = v64[v86[8 - 5]];
									v78 = v78 + (291 - (23 + 267));
									v86 = v74[v78];
									v84[v86[2]] = v86[1947 - (1129 + 815)];
									v78 = v78 + (388 - (371 + 16));
									v86 = v74[v78];
									v632 = v86[1752 - (1326 + 424)];
									v84[v632](v13(v84, v632 + (1 - 0), v86[10 - 7]));
									v78 = v78 + 1;
									v86 = v74[v78];
									v78 = v86[3];
								else
									local v673;
									v84[v86[2]] = v84[v86[121 - (88 + 29 + 1)]][v86[775 - (720 + 51)]];
									v78 = v78 + (2 - 1);
									v86 = v74[v78];
									v84[v86[2]] = v86[3];
									v78 = v78 + (1777 - (421 + 1355));
									v86 = v74[v78];
									v84[v86[2 - 0]] = v86[2 + 1];
									v78 = v78 + (1084 - (286 + 797));
									v86 = v74[v78];
									v84[v86[2]] = v86[10 - 7];
									v78 = v78 + (1 - (1166 - (228 + 938)));
									v86 = v74[v78];
									v84[v86[441 - (397 + 42)]] = v86[(686 - (332 + 353)) + 2];
									v78 = v78 + (801 - (24 + 776));
									v86 = v74[v78];
									v673 = v86[2];
									v84[v673] = v84[v673](v13(v84, v673 + (1 - 0), v86[788 - (222 + 563)]));
									v78 = v78 + (1 - 0);
									v86 = v74[v78];
									v84[v86[2 + 0]][v86[193 - (23 + 167)]] = v84[v86[1802 - (690 + 1108)]];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[1 + 1]] = v64[v86[3]];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[2 + 0]] = v84[v86[(1036 - 185) - (40 + 808)]][v86[1 + 3]];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[2]] = v86[3];
								end
							elseif ((v87 <= (152 - 112)) or (933 >= 3101)) then
								if (v87 <= (36 + 1)) then
									if (v87 <= 35) then
										v84[v86[2 + 0]] = v86[2 + 1];
									elseif ((1977 <= 3119) and (v87 == (607 - ((123 - 76) + 524)))) then
										local v691 = v86[2 + 0];
										do
											return v84[v691](v13(v84, v691 + (2 - 1), v86[4 - 1]));
										end
									else
										local v692 = 0;
										local v693;
										while true do
											if ((2321 < 3422) and (v692 == 6)) then
												v78 = v78 + 1;
												v86 = v74[v78];
												v84[v86[4 - (2 + 0)]] = v84[v86[1729 - (1165 + 282 + 279)]];
												v78 = v78 + 1 + 0;
												v692 = 21 - 14;
											end
											if ((3757 <= 4903) and (v692 == (1 + (0 - 0)))) then
												v84[v86[481 - (341 + 138)]] = v86[1 + (425 - (18 + 405))];
												v78 = v78 + (1 - 0);
												v86 = v74[v78];
												v693 = v86[328 - (89 + 237)];
												v692 = 2;
											end
											if ((872 < 4220) and (v692 == (9 - 6))) then
												v78 = v78 + (1 - 0);
												v86 = v74[v78];
												v84[v86[883 - (581 + 300)]][v86[1223 - (855 + 365)]] = v86[9 - 5];
												v78 = v78 + 1 + 0;
												v692 = 1239 - (1030 + 205);
											end
											if (v692 == (2 + 0)) then
												v84[v693] = v84[v693](v13(v84, v693 + 1 + 0, v86[3]));
												v78 = v78 + (287 - (156 + 130));
												v86 = v74[v78];
												v84[v86[4 - (1 + 1)]][v86[4 - 1]] = v84[v86[7 - 3]];
												v692 = 1 + 2;
											end
											if ((1365 <= 4238) and (v692 == (2 + 1 + 1))) then
												v86 = v74[v78];
												v84[v86[71 - (10 + (89 - 30))]] = v64[v86[1 + 2]];
												v78 = v78 + (4 - 3);
												v86 = v74[v78];
												v692 = 1168 - (671 + 492);
											end
											if (v692 == (6 + 1)) then
												v86 = v74[v78];
												v693 = v86[1217 - (369 + 846)];
												v84[v693] = v84[v693](v13(v84, v693 + 1 + 0, v86[3]));
												break;
											end
											if ((v692 == (0 + 0)) or (268 == 3559)) then
												v693 = nil;
												v84[v86[2]] = v86[3];
												v78 = v78 + (1946 - (1036 + 909));
												v86 = v74[v78];
												v692 = 1 + 0;
											end
											if (v692 == (8 - 3)) then
												v84[v86[2]] = v84[v86[3]][v86[207 - ((989 - (194 + 784)) + 192)]];
												v78 = v78 + 1 + 0;
												v86 = v74[v78];
												v84[v86[177 - ((1905 - (694 + 1076)) + 40)]] = v84[v86[6 - 3]][v86[3 + 1]];
												v692 = 12 - 6;
											end
										end
									end
								elseif ((v87 <= 38) or (2668 < 2021)) then
									local v283;
									v84[v86[1906 - (122 + 1782)]] = v86[4 - 1];
									v78 = v78 + ((167 + 10) - (50 + 126));
									v86 = v74[v78];
									v84[v86[5 - 3]] = v86[1 + 2];
									v78 = v78 + 1;
									v86 = v74[v78];
									v283 = v86[1415 - (1233 + 180)];
									v84[v283] = v84[v283](v13(v84, v283 + (970 - (487 + 35 + 447)), v86[3]));
									v78 = v78 + (1422 - (107 + 1314));
									v86 = v74[v78];
									v84[v86[1 + 1]][v86[8 - 5]] = v84[v86[4]];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[3 - 1]] = v86[11 - 8];
								elseif (v87 == 39) then
									local v694;
									v84[v86[2]] = v84[v86[1913 - (645 + 71 + 1194)]][v86[1 + 3]];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[505 - (74 + 429)]] = v86[5 - 2];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[1 + 0 + (2 - 1)]] = v86[6 - 3];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[2 + 0]] = v86[8 - 5];
									v78 = v78 + (2 - 1);
									v86 = v74[v78];
									v694 = v86[435 - (279 + 143 + 11)];
									v84[v694] = v84[v694](v13(v84, v694 + (779 - (454 + 324)), v86[3 + 0]));
									v78 = v78 + (18 - (12 + 5));
									v86 = v74[v78];
									v84[v86[2]][v86[2 + 1]] = v84[v86[10 - 6]];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[1095 - (277 + 816)]] = v64[v86[12 - 9]];
									v78 = v78 + (1971 - (214 + 1756));
									v86 = v74[v78];
									v84[v86[(5728 - 4543) - (1058 + 125)]] = v84[v86[1 + 2]][v86[979 - (815 + 160)]];
									v78 = v78 + (4 - 3);
									v86 = v74[v78];
									v84[v86[2]] = v84[v86[7 - 4]][v86[4]];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[2]] = v84[v86[8 - 5]];
								else
									v84[v86[1900 - (41 + 1857)]][v86[3]] = v84[v86[1897 - (1222 + 74 + 597)]];
								end
							elseif (v87 <= (110 - 67)) then
								if (v87 <= (58 - (1 + 16))) then
									v84[v86[1184 - (229 + 953)]] = v84[v86[1777 - (1111 + (1248 - (217 + 368)))]];
								elseif (v87 == (1621 - (874 + 705))) then
									local v716;
									v84[v86[1 + 1]] = v86[3 + 0];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[3 - 1]] = v86[8 - 5];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[1 + 1]] = v86[682 - (642 + 37)];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[2]] = v86[1 + 0 + 2];
									v78 = v78 + (2 - 1);
									v86 = v74[v78];
									v716 = v86[456 - (173 + 60 + 221)];
									v84[v716] = v84[v716](v13(v84, v716 + (2 - 1), v86[3]));
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[2]][v86[1544 - (718 + 823)]] = v84[v86[3 + 1]];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[807 - (266 + 539)]] = v84[v86[8 - 5]][v86[1229 - (636 + 589)]];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[4 - 2]][v86[3]] = v84[v86[8 - 4]];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[1 + 1]] = v64[v86[1018 - (657 + 358)]];
									v78 = v78 + (2 - 1);
									v86 = v74[v78];
									v84[v86[2]] = v84[v86[6 - 3]][v86[4]];
								else
									local v735 = v86[1189 - (1151 + 36)];
									local v736, v737 = v77(v84[v735](v13(v84, v735 + 1 + 0 + 0, v79)));
									v79 = (v737 + v735) - (1 + 0);
									local v738 = 0;
									for v1026 = v735, v79 do
										local v1027 = 0 - 0;
										while true do
											if ((1832 - (1552 + 280)) == v1027) then
												v738 = v738 + (835 - ((953 - (844 + 45)) + 770));
												v84[v1026] = v736[v738];
												break;
											end
										end
									end
								end
							elseif (v87 <= 44) then
								local v297;
								v84[v86[2]] = v63[v86[3 + 0]];
								v78 = v78 + 1;
								v86 = v74[v78];
								v84[v86[4 - 2]] = v84[v86[287 - (242 + 42)]][v86[1 + 3]];
								v78 = v78 + (1244 - (157 + 1086));
								v86 = v74[v78];
								v84[v86[2]] = v84[v86[5 - 2]][v84[v86[17 - (25 - 12)]]];
								v78 = v78 + (1 - 0);
								v86 = v74[v78];
								v84[v86[2 - 0]] = v63[v86[822 - (599 + (511 - 291))]];
								v78 = v78 + ((1201 - (132 + 1068)) - 0);
								v86 = v74[v78];
								v84[v86[1933 - (1813 + 118)]] = v84[v86[3 + 0]][v86[(1949 - 728) - (841 + 376)]];
								v78 = v78 + (1 - 0);
								v86 = v74[v78];
								v297 = v86[2];
								v84[v297] = v84[v297](v84[v297 + 1 + 0]);
								v78 = v78 + (2 - 1);
								v86 = v74[v78];
								if v84[v86[861 - (464 + 395)]] then
									v78 = v78 + (2 - 1);
								else
									v78 = v86[3];
								end
							elseif (v87 > 45) then
								local v740;
								v740 = v86[1 + 1];
								v84[v740] = v84[v740](v13(v84, v740 + (838 - (467 + 370)), v86[3]));
								v78 = v78 + (1 - (1623 - (214 + 1409)));
								v86 = v74[v78];
								v84[v86[2]][v86[3]] = v84[v86[3 + 1]];
								v78 = v78 + 1;
								v86 = v74[v78];
								v84[v86[2]] = v64[v86[10 - 7]];
								v78 = v78 + 1 + 0;
								v86 = v74[v78];
								v84[v86[4 - 2]] = v84[v86[523 - (150 + 370)]][v86[4]];
								v78 = v78 + (1283 - (74 + 1208));
								v86 = v74[v78];
								v84[v86[4 - 2]] = v84[v86[14 - 11]][v86[3 + 1]];
								v78 = v78 + 1;
								v86 = v74[v78];
								v84[v86[392 - (14 + 291 + 85)]] = v84[v86[3]];
								v78 = v78 + 1;
								v86 = v74[v78];
								v740 = v86[3 - 1];
								v84[v740] = v84[v740](v13(v84, v740 + 1, v86[2 + 1]));
								v78 = v78 + 1;
								v86 = v74[v78];
								v84[v86[2 + 0]] = v84[v86[(1637 - (497 + 1137)) + (940 - (9 + 931))]];
								v78 = v78 + 1;
								v86 = v74[v78];
								v84[v86[5 - 3]] = v64[v86[3 + 0]];
								v78 = v78 + 1;
								v86 = v74[v78];
								v84[v86[80 - (23 + 55)]] = v84[v86[6 - 3]][v86[293 - (181 + 108)]];
							else
								local v760 = 0 + 0;
								local v761;
								while true do
									if ((1647 <= 3116) and (v760 == (8 + 0))) then
										v78 = v78 + ((1 + 0) - 0);
										v86 = v74[v78];
										v84[v86[1 + 1]] = v84[v86[3]][v86[905 - (652 + 249)]];
										v760 = 9;
									end
									if ((5 - 3) == v760) then
										v86 = v74[v78];
										v84[v86[1870 - (708 + 1160)]] = v86[8 - 5];
										v78 = v78 + (1 - 0);
										v760 = 30 - (10 + (41 - 24));
									end
									if ((v760 == (2 + 5)) or (4709 == 4502)) then
										v78 = v78 + (1733 - (1400 + (985 - 653)));
										v86 = v74[v78];
										v84[v86[2]][v86[3]] = v84[v86[4]];
										v760 = 8;
									end
									if ((v760 == (9 - 4)) or (1950 >= 3843)) then
										v86 = v74[v78];
										v84[v86[1 + 1]] = v86[1911 - (242 + 1666)];
										v78 = v78 + 1;
										v760 = 6;
									end
									if (v760 == (3 + 3)) then
										v86 = v74[v78];
										v761 = v86[1 + 1];
										v84[v761] = v84[v761](v13(v84, v761 + 1 + 0 + 0, v86[3]));
										v760 = 947 - (850 + 90);
									end
									if ((15 - (482 - (296 + 180))) == v760) then
										v78 = v78 + (1391 - (360 + 1030));
										v86 = v74[v78];
										v84[v86[(1405 - (1183 + 220)) + (1265 - (1037 + 228))]][v86[7 - 4]] = v84[v86[5 - 1]];
										break;
									end
									if (v760 == (1662 - (909 + 752))) then
										v86 = v74[v78];
										v84[v86[1225 - (109 + (1802 - 688))]] = v84[v86[5 - 2]][v86[2 + 2]];
										v78 = v78 + (243 - ((17 - 11) + 236));
										v760 = 2 + 0;
									end
									if (((0 + 0) == v760) or (2417 > 3687)) then
										v761 = nil;
										v84[v86[4 - 2]] = v64[v86[3]];
										v78 = v78 + 1;
										v760 = 1 - 0;
									end
									if ((2401 >= 1851) and (v760 == (1137 - (1076 + 57)))) then
										v86 = v74[v78];
										v84[v86[1 + 1]] = v86[692 - (579 + (375 - 265))];
										v78 = v78 + 1 + 0;
										v760 = 5;
									end
									if (((3 + 0) == v760) or (1753 > 3514)) then
										v86 = v74[v78];
										v84[v86[2]] = v86[(736 - (527 + 207)) + 1];
										v78 = v78 + (408 - (174 + 233));
										v760 = 11 - 7;
									end
								end
							end
						elseif (v87 <= (120 - 51)) then
							if (v87 <= 57) then
								if ((v87 <= 51) or (1862 >= 3732)) then
									if (v87 <= (22 + 26)) then
										if (v87 > 47) then
											local v310;
											v84[v86[1176 - (663 + 511)]] = v84[v86[3 + 0]][v86[1 + 3]];
											v78 = v78 + (2 - 1);
											v86 = v74[v78];
											v84[v86[2 + 0]] = v86[3];
											v78 = v78 + (2 - 1);
											v86 = v74[v78];
											v84[v86[4 - 2]] = v86[2 + 1];
											v78 = v78 + (1 - 0);
											v86 = v74[v78];
											v84[v86[2 + 0]] = v86[1 + 2];
											v78 = v78 + (528 - (187 + 340));
											v86 = v74[v78];
											v84[v86[724 - (478 + 244)]] = v86[520 - (440 + (1947 - (1298 + 572)))];
											v78 = v78 + 1;
											v86 = v74[v78];
											v310 = v86[1 + 1];
											v84[v310] = v84[v310](v13(v84, v310 + ((6 - 3) - (172 - (144 + 26))), v86[1559 - (655 + 901)]));
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v84[v86[2]][v86[3 + 0]] = v84[v86[3 + 1]];
											v78 = v78 + (3 - 2);
											v86 = v74[v78];
											v84[v86[1447 - (695 + (1868 - 1118))]] = v86[9 - 6];
											v78 = v78 + (1 - 0);
											v86 = v74[v78];
											v78 = v86[3];
										else
											v84[v86[7 - 5]] = #v84[v86[354 - ((664 - 379) + 66)]];
										end
									elseif (v87 <= (113 - 64)) then
										v84[v86[1312 - (244 + 438 + 628)]] = v86[1 + 2] ~= (299 - (176 + 123));
									elseif (v87 == ((57 - 36) + 29)) then
										local v762;
										local v763;
										v84[v86[(4 - 2) + 0]] = v63[v86[272 - (239 + 30)]];
										v78 = v78 + 1 + 0;
										v86 = v74[v78];
										v84[v86[2 + 0]] = v86[4 - 1] / v84[v86[12 - 8]];
										v78 = v78 + (316 - (306 + 9));
										v86 = v74[v78];
										v763 = v86[6 - 4];
										v84[v763](v84[v763 + 1]);
										v78 = v78 + 1 + 0;
										v86 = v74[v78];
										v84[v86[2 + 0]] = v64[v86[2 + 1]];
										v78 = v78 + (2 - 1);
										v86 = v74[v78];
										v763 = v86[1377 - (1140 + 235)];
										v762 = v84[v86[2 + 1]];
										v84[v763 + 1 + 0] = v762;
										v84[v763] = v762[v86[2 + 2]];
										v78 = v78 + ((256 - 203) - (33 + 19));
										v86 = v74[v78];
										v84[v86[1 + 1 + 0]] = v63[v86[8 - 5]];
										v78 = v78 + 1 + 0;
										v86 = v74[v78];
										v84[v86[3 - 1]] = v84[v86[3 + 0]][v86[693 - ((795 - 209) + 103)]];
										v78 = v78 + 1 + 0;
										v86 = v74[v78];
										v763 = v86[5 - 3];
										v84[v763] = v84[v763](v13(v84, v763 + (1489 - (1309 + 179)), v86[5 - 2]));
										v78 = v78 + 1 + 0;
										v86 = v74[v78];
										v84[v86[5 - (3 + 0)]] = v84[v86[3 + 0]];
										v78 = v78 + (1 - (0 + 0));
										v86 = v74[v78];
										v84[v86[(205 - (5 + 197)) - 1]] = v86[612 - (295 + 314)];
									else
										local v784 = v86[4 - 2];
										v84[v784] = v84[v784](v84[v784 + 1]);
									end
								elseif ((4473 > 1694) and (v87 <= (2016 - (1300 + 662)))) then
									if (v87 <= (163 - 111)) then
										v84[v86[2]] = not v84[v86[3]];
									elseif ((v87 > (1808 - (1178 + 577))) or (1091 > 2982)) then
										v84[v86[2 + 0]] = v86[8 - (691 - (339 + 347))] / v84[v86[1409 - (851 + 554)]];
									else
										v84[v86[2 + 0]] = {};
									end
								elseif (v87 <= 55) then
									local v330 = 0 - 0;
									local v331;
									local v332;
									local v333;
									while true do
										if ((v330 == (1 - 0)) or (2101 == 1780)) then
											v78 = v78 + (303 - (115 + 187));
											v86 = v74[v78];
											v84[v86[4 - 2]] = v86[3];
											v78 = v78 + 1;
											v330 = 2 + (0 - 0);
										end
										if ((v330 == (2 + 0)) or (4377 <= 1948)) then
											v86 = v74[v78];
											v84[v86[7 - 5]] = #v84[v86[1164 - (160 + 1001)]];
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v330 = 3 + 0;
										end
										if ((928 <= 4223) and (v330 == 3)) then
											v84[v86[3 - (377 - (365 + 11))]] = v86[361 - (237 + 121)];
											v78 = v78 + 1;
											v86 = v74[v78];
											v333 = v86[899 - (525 + 372)];
											v330 = 7 - 3;
										end
										if ((1328 <= 1816) and (v330 == 0)) then
											v331 = nil;
											v332 = nil;
											v333 = nil;
											v84[v86[6 - 4]] = {};
											v330 = 143 - (96 + 46);
										end
										if ((v330 == 4) or (1306 >= 2276)) then
											v332 = v84[v333];
											v331 = v84[v333 + (779 - (643 + 134))];
											if ((4727 > 1153) and (v331 > (0 + 0))) then
												if (v332 > v84[v333 + (2 - 1)]) then
													v78 = v86[3];
												else
													v84[v333 + (11 - 8)] = v332;
												end
											elseif ((3344 == 3344) and (v332 < v84[v333 + 1 + 0 + 0])) then
												v78 = v86[5 - (7 - 5)];
											else
												v84[v333 + (5 - 2)] = v332;
											end
											break;
										end
									end
								elseif (v87 > (775 - (316 + 403))) then
									v78 = v86[2 + (2 - 1)];
								else
									local v789;
									v84[v86[5 - 3]] = v84[v86[3]][v86[2 + 2]];
									v78 = v78 + (2 - 1);
									v86 = v74[v78];
									v84[v86[(926 - (837 + 87)) + 0]] = v84[v86[1 + 2]][v86[13 - 9]];
									v78 = v78 + (4 - 3);
									v86 = v74[v78];
									v84[v86[3 - 1]] = v84[v86[1 + 2]];
									v78 = v78 + (1 - 0);
									v86 = v74[v78];
									v789 = v86[1 + 1];
									v84[v789] = v84[v789](v13(v84, v789 + (2 - 1), v86[20 - (12 + 5)]));
									v78 = v78 + (3 - (3 - 1));
									v86 = v74[v78];
									v84[v86[3 - 1]] = v84[v86[6 - 3]];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[4 - 2]][v86[3]] = v86[4];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[1 + (1671 - (837 + 833))]] = v86[1976 - (1656 + 317)];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v78 = v86[3 + 0];
								end
							elseif ((v87 <= (167 - 104)) or (3894 > 4440)) then
								if ((v87 <= 60) or (2141 >= 4882)) then
									if (v87 <= ((61 + 224) - 227)) then
										local v334 = 354 - (5 + 349);
										local v335;
										while true do
											if ((v334 == (0 - 0)) or (4349 >= 4788)) then
												v335 = v86[1273 - (266 + 1005)];
												do
													return v13(v84, v335, v79);
												end
												break;
											end
										end
									elseif ((2411 > 1017) and (v87 > (39 + 20))) then
										if ((v86[6 - (1391 - (356 + 1031))] == v84[v86[4 - 0]]) or (652 > 1802)) then
											v78 = v78 + 1;
										else
											v78 = v86[1699 - (561 + 1135)];
										end
									else
										local v805;
										v84[v86[2]][v86[3 - (0 + 0)]] = v84[v86[4]];
										v78 = v78 + (3 - 2);
										v86 = v74[v78];
										v84[v86[1068 - (507 + 559)]] = v64[v86[7 - 4]];
										v78 = v78 + (3 - 2);
										v86 = v74[v78];
										v84[v86[390 - (212 + 176)]] = v84[v86[3]][v86[909 - (250 + 655)]];
										v78 = v78 + 1;
										v86 = v74[v78];
										v84[v86[5 - 3]] = v86[5 - 2];
										v78 = v78 + (1 - (1646 - (73 + 1573)));
										v86 = v74[v78];
										v84[v86[2]] = v86[1959 - (1869 + 87)];
										v78 = v78 + (3 - (1390 - (1307 + 81)));
										v86 = v74[v78];
										v84[v86[1903 - (484 + (1651 - (7 + 227)))]] = v86[6 - (4 - 1)];
										v78 = v78 + (1 - 0);
										v86 = v74[v78];
										v805 = v86[775 - (48 + 725)];
										v84[v805] = v84[v805](v13(v84, v805 + (1 - 0), v86[(173 - (90 + 76)) - 4]));
										v78 = v78 + 1;
										v86 = v74[v78];
										v84[v86[2]][v86[(6 - 4) + 1]] = v84[v86[4]];
										v78 = v78 + 1;
										v86 = v74[v78];
										v84[v86[4 - 2]] = v64[v86[1 + 2]];
										v78 = v78 + 1 + 0;
										v86 = v74[v78];
										v84[v86[2]] = v84[v86[3]][v86[(420 + 437) - (152 + 701)]];
									end
								elseif (v87 <= (1372 - (355 + 75 + 881))) then
									local v336 = 0 + 0;
									local v337;
									local v338;
									local v339;
									while true do
										if (v336 == (897 - (557 + 338))) then
											if (v338 > 0) then
												if (v339 <= v84[v337 + 1 + 0]) then
													local v1557 = 0;
													while true do
														if (v1557 == (0 - 0)) then
															v78 = v86[10 - 7];
															v84[v337 + (7 - 4)] = v339;
															break;
														end
													end
												end
											elseif (v339 >= v84[v337 + 1]) then
												v78 = v86[3];
												v84[v337 + ((5 + 1) - 3)] = v339;
											end
											break;
										end
										if (v336 == 0) then
											v337 = v86[803 - (499 + 302)];
											v338 = v84[v337 + (868 - (39 + 827))];
											v336 = 1;
										end
										if (v336 == (2 - 1)) then
											v339 = v84[v337] + v338;
											v84[v337] = v339;
											v336 = 2;
										end
									end
								elseif (v87 == (138 - 76)) then
									if v84[v86[7 - (19 - 14)]] then
										v78 = v78 + (1 - 0);
									else
										v78 = v86[1 + 2];
									end
								else
									local v825 = v86[5 - 3];
									local v826 = v84[v825];
									local v827 = v84[v825 + (262 - (197 + 63))];
									if ((v827 > (0 + 0)) or (3601 < 1710)) then
										if ((v826 > v84[v825 + ((1 + 0) - 0)]) or (2033 <= 813)) then
											v78 = v86[107 - (103 + 1)];
										else
											v84[v825 + (557 - (475 + 19 + 60))] = v826;
										end
									elseif (v826 < v84[v825 + (2 - 1)]) then
										v78 = v86[3];
									else
										v84[v825 + (9 - 6)] = v826;
									end
								end
							elseif (v87 <= 66) then
								if ((v87 <= (9 + 55)) or (721 >= 1517)) then
									local v340 = 0;
									local v341;
									while true do
										if (v340 == (8 + 0)) then
											v78 = v78 + (1504 - (1395 + 108));
											v86 = v74[v78];
											v84[v86[(3 + 2) - 3]] = v86[3];
											break;
										end
										if ((1205 - (7 + 1197)) == v340) then
											v86 = v74[v78];
											v84[v86[1 + 1]] = v84[v86[1 + 1 + 1]][v86[323 - (27 + 292)]];
											v78 = v78 + 1;
											v340 = 5 - 3;
										end
										if (v340 == (4 - 0)) then
											v86 = v74[v78];
											v84[v86[8 - 6]] = v86[5 - 2];
											v78 = v78 + (1 - 0);
											v340 = 144 - (43 + 96);
										end
										if (v340 == 7) then
											v78 = v78 + (4 - 3);
											v86 = v74[v78];
											v63[v86[3]] = v84[v86[3 - 1]];
											v340 = 7 + 1;
										end
										if ((2 + 4) == v340) then
											v86 = v74[v78];
											v341 = v86[3 - 1];
											v84[v341] = v84[v341](v13(v84, v341 + 1, v86[(2 - 0) + 1]));
											v340 = 7;
										end
										if (v340 == (3 - 1)) then
											v86 = v74[v78];
											v84[v86[1 + 1]] = v86[3];
											v78 = v78 + 1 + 0;
											v340 = 1754 - (1414 + 337);
										end
										if (v340 == 0) then
											v341 = nil;
											v84[v86[1942 - (1642 + 298)]] = v64[v86[7 - 4]];
											v78 = v78 + (1370 - (618 + 751));
											v340 = 2 - 1;
										end
										if ((4719 >= 2813) and (v340 == 3)) then
											v86 = v74[v78];
											v84[v86[5 - 3]] = v84[v86[1 + 2]][v86[4]];
											v78 = v78 + 1 + 0 + 0;
											v340 = 4;
										end
										if ((3544 == 3544) and (v340 == (977 - (357 + 615)))) then
											v86 = v74[v78];
											v84[v86[2 + 0]] = v84[v86[6 - 3]][v86[4 + 0]];
											v78 = v78 + 1;
											v340 = 6;
										end
									end
								elseif ((v87 > (139 - 74)) or (2666 >= 4978)) then
									if (v86[2 + 0] < v84[v86[1 + (1913 - (206 + 1704))]]) then
										v78 = v78 + 1 + 0;
									else
										v78 = v86[1304 - ((646 - 262) + 917)];
									end
								else
									local v828;
									v84[v86[699 - (128 + 569)]] = v84[v86[1546 - (1407 + 136)]];
									v78 = v78 + (1888 - ((1371 - 684) + 1200));
									v86 = v74[v78];
									v828 = v86[1712 - (556 + 1154)];
									v84[v828] = v84[v828](v13(v84, v828 + 1, v86[10 - 7]));
									v78 = v78 + (96 - (9 + 86));
									v86 = v74[v78];
									v84[v86[2]] = v84[v86[3]];
									v78 = v78 + (422 - (275 + 146));
									v86 = v74[v78];
									v84[v86[1 + 1 + 0]] = v64[v86[3]];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[66 - (29 + (1310 - (155 + 1120)))]] = v84[v86[(1519 - (396 + 1110)) - 10]][v86[4]];
									v78 = v78 + (2 - 1);
									v86 = v74[v78];
									v84[v86[(17 - 9) - 6]] = v86[3];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[1014 - (53 + 959)]] = v86[411 - (312 + 96)];
									v78 = v78 + (1 - (0 + 0));
									v86 = v74[v78];
									v84[v86[287 - (147 + 138)]] = v86[(680 + 222) - (813 + 86)];
									v78 = v78 + 1 + 0 + 0;
									v86 = v74[v78];
									v84[v86[3 - (977 - (230 + 746))]] = v86[495 - (18 + 474)];
									v78 = v78 + 1;
									v86 = v74[v78];
									v828 = v86[1 + 1];
									v84[v828] = v84[v828](v13(v84, v828 + (3 - 2), v86[1089 - (860 + (827 - (473 + 128)))]));
								end
							elseif (v87 <= (370 - (121 + 182))) then
								local v342 = v86[50 - (39 + 9)];
								v84[v342](v13(v84, v342 + 1 + 0, v86[1243 - (988 + 252)]));
							elseif (v87 == (8 + 60)) then
								local v849 = v86[268 - (38 + 228)];
								local v850 = v84[v86[3]];
								v84[v849 + 1 + 0] = v850;
								v84[v849] = v850[v86[1974 - (49 + 1921)]];
							else
								local v854;
								v854 = v86[892 - (223 + 667)];
								v84[v854] = v84[v854](v13(v84, v854 + (53 - (51 + (1 - 0))), v86[5 - 2]));
								v78 = v78 + (1 - 0);
								v86 = v74[v78];
								v84[v86[1127 - (146 + 979)]][v86[1 + (475 - (106 + 367))]] = v84[v86[609 - (28 + 283 + 294)]];
								v78 = v78 + (2 - 1);
								v86 = v74[v78];
								v84[v86[2]] = v84[v86[3]][v86[2 + 2]];
								v78 = v78 + (1444 - (496 + 947));
								v86 = v74[v78];
								v84[v86[1360 - (1233 + 125)]][v86[2 + 1]] = v84[v86[4]];
								v78 = v78 + 1 + 0;
								v86 = v74[v78];
								v84[v86[2]] = v64[v86[3]];
								v78 = v78 + 1 + 0;
								v86 = v74[v78];
								v84[v86[1647 - (963 + 682)]] = v84[v86[3 + 0]][v86[4]];
								v78 = v78 + 1;
								v86 = v74[v78];
								v84[v86[1506 - (504 + 1000)]] = v86[3 + 0];
								v78 = v78 + 1 + 0;
								v86 = v74[v78];
								v84[v86[1 + 1]] = v86[4 - 1];
								v78 = v78 + 1 + 0;
								v86 = v74[v78];
								v84[v86[2 + 0]] = v86[185 - (156 + 26)];
								v78 = v78 + 1 + 0;
								v86 = v74[v78];
								v854 = v86[2 - 0];
								v84[v854] = v84[v854](v13(v84, v854 + (165 - (149 + 15)), v86[963 - (890 + 70)]));
							end
						elseif ((v87 <= 81) or (262 > 1628)) then
							if (v87 <= (192 - (39 + 78))) then
								if (v87 <= (554 - (14 + 468))) then
									if ((4108 == 4108) and (v87 <= (153 - 83))) then
										v84[v86[5 - 3]] = v84[v86[2 + 1]] % v86[3 + 1];
									elseif (v87 == (16 + 55)) then
										local v874;
										v84[v86[1 + 1]] = v84[v86[1 + 2]][v86[7 - 3]];
										v78 = v78 + 1 + 0;
										v86 = v74[v78];
										v84[v86[2]] = v84[v86[10 - 7]][v86[1 + 3]];
										v78 = v78 + 1;
										v86 = v74[v78];
										v84[v86[53 - (12 + 39)]] = v84[v86[3 + 0]];
										v78 = v78 + (2 - 1);
										v86 = v74[v78];
										v874 = v86[6 - 4];
										v84[v874] = v84[v874](v13(v84, v874 + 1 + 0, v86[2 + 1]));
										v78 = v78 + (2 - 1);
										v86 = v74[v78];
										v84[v86[2 + 0]] = v84[v86[14 - 11]];
										v78 = v78 + (1711 - (1596 + 114));
										v86 = v74[v78];
										v84[v86[2]] = v64[v86[7 - 4]];
										v78 = v78 + 1;
										v86 = v74[v78];
										v84[v86[715 - (164 + 549)]] = v84[v86[3]][v86[1442 - (1059 + 379)]];
										v78 = v78 + 1;
										v86 = v74[v78];
										v84[v86[2 - 0]] = v86[3];
										v78 = v78 + 1;
										v86 = v74[v78];
										v84[v86[2]] = v86[3];
										v78 = v78 + 1;
										v86 = v74[v78];
										v84[v86[2 + 0]] = v86[1 + 2];
									else
										local v892;
										v84[v86[394 - (145 + 247)]] = v86[3 + 0];
										v78 = v78 + 1;
										v86 = v74[v78];
										v84[v86[1 + 1]] = v86[3];
										v78 = v78 + 1;
										v86 = v74[v78];
										v84[v86[5 - 3]] = v86[3];
										v78 = v78 + 1 + 0;
										v86 = v74[v78];
										v892 = v86[2 + 0];
										v84[v892] = v84[v892](v13(v84, v892 + (1 - 0), v86[3]));
										v78 = v78 + 1;
										v86 = v74[v78];
										v84[v86[722 - (254 + 466)]][v86[563 - (544 + 16)]] = v84[v86[12 - 8]];
										v78 = v78 + (629 - (294 + 334));
										v86 = v74[v78];
										v84[v86[255 - (236 + 17)]] = v86[2 + 1];
									end
								elseif (v87 <= 73) then
									local v344 = 0 + 0;
									while true do
										if (v344 == (18 - 13)) then
											v84[v86[9 - 7]] = v63[v86[2 + 1]];
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v344 = 800 - (413 + 381);
										end
										if ((4654 == 4654) and (v344 == (0 + 0))) then
											v84[v86[3 - 1]] = v63[v86[7 - 4]];
											v78 = v78 + (1971 - (582 + 1388));
											v86 = v74[v78];
											v344 = 1;
										end
										if ((2 - 0) == v344) then
											v84[v86[2 + 0]] = not v84[v86[367 - (326 + 38)]];
											v78 = v78 + (2 - 1);
											v86 = v74[v78];
											v344 = 3;
										end
										if (6 == v344) then
											v84[v86[2 - 0]] = v84[v86[623 - (47 + 573)]][v86[2 + 2]];
											v78 = v78 + (4 - 3);
											v86 = v74[v78];
											v344 = 11 - 4;
										end
										if ((1671 - (1269 + 395)) == v344) then
											if v84[v86[494 - (76 + 416)]] then
												v78 = v78 + (444 - (319 + 124));
											else
												v78 = v86[6 - 3];
											end
											break;
										end
										if ((4278 >= 989) and ((1008 - (564 + 443)) == v344)) then
											v84[v86[2]] = v84[v86[7 - 4]][v86[4]];
											v78 = v78 + (459 - (337 + 121));
											v86 = v74[v78];
											v344 = 2;
										end
										if (v344 == 3) then
											v84[v86[5 - 3]][v86[9 - 6]] = v84[v86[1915 - (1261 + 650)]];
											v78 = v78 + 1;
											v86 = v74[v78];
											v344 = 2 + 2;
										end
										if (v344 == (6 - 2)) then
											v84[v86[1819 - (772 + 1045)]] = v63[v86[1 + 2]];
											v78 = v78 + (145 - (102 + 42));
											v86 = v74[v78];
											v344 = 1849 - (1524 + 320);
										end
									end
								elseif ((v87 == (1344 - (1049 + 221))) or (2563 == 4349)) then
									v84[v86[158 - (18 + 138)]] = v86[7 - 4] + v84[v86[1106 - (67 + 1035)]];
								else
									local v906 = 348 - (136 + 212);
									local v907;
									while true do
										if (v906 == (4 - 3)) then
											v78 = v78 + 1;
											v86 = v74[v78];
											v907 = v86[2 + 0];
											v84[v907] = v84[v907](v13(v84, v907 + 1 + 0, v86[1607 - (240 + 1364)]));
											v78 = v78 + 1;
											v86 = v74[v78];
											v84[v86[1084 - (1050 + 32)]][v86[10 - 7]] = v84[v86[4]];
											v78 = v78 + 1;
											v906 = 2 + 0;
										end
										if (v906 == (1070 - (331 + 724))) then
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v907 = v86[646 - (269 + 375)];
											v84[v907] = v84[v907](v13(v84, v907 + (726 - (267 + 458)), v86[1 + 2]));
											v78 = v78 + (1 - 0);
											v86 = v74[v78];
											v84[v86[820 - (667 + 151)]][v86[1500 - (1410 + 87)]] = v84[v86[1901 - (1504 + 393)]];
											v78 = v78 + (2 - 1);
											v906 = 16;
										end
										if (v906 == 9) then
											v78 = v78 + (2 - 1);
											v86 = v74[v78];
											v907 = v86[798 - (461 + 335)];
											v84[v907] = v84[v907](v13(v84, v907 + 1 + 0, v86[1764 - (1730 + 31)]));
											v78 = v78 + (1668 - (728 + 939));
											v86 = v74[v78];
											v84[v86[2]][v86[10 - 7]] = v84[v86[7 - 3]];
											v78 = v78 + (2 - 1);
											v906 = 1078 - (138 + 930);
										end
										if ((23 == v906) or (2522 == 4177)) then
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v907 = v86[2];
											v84[v907] = v84[v907](v13(v84, v907 + 1 + 0, v86[3 + 0]));
											v78 = v78 + (4 - 3);
											v86 = v74[v78];
											v84[v86[1768 - (459 + 1307)]][v86[1873 - (474 + 1396)]] = v84[v86[6 - 2]];
											v78 = v78 + 1;
											v906 = 23 + 1;
										end
										if (v906 == 25) then
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v907 = v86[5 - 3];
											v84[v907] = v84[v907](v13(v84, v907 + 1 + 0, v86[3]));
											v78 = v78 + (3 - 2);
											v86 = v74[v78];
											v84[v86[8 - 6]][v86[3]] = v84[v86[595 - (562 + 29)]];
											v78 = v78 + 1 + 0;
											v906 = 1445 - (374 + 1045);
										end
										if ((1185 <= 3160) and (v906 == 6)) then
											v86 = v74[v78];
											v84[v86[2 + 0]] = v84[v86[9 - 6]];
											v78 = v78 + 1;
											v86 = v74[v78];
											v84[v86[640 - (448 + 190)]] = v86[1 + 2];
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v84[v86[2]] = v86[2 + 1];
											v906 = 26 - 19;
										end
										if (v906 == (86 - 58)) then
											v86 = v74[v78];
											v84[v86[2]] = v84[v86[3]];
											v78 = v78 + (1495 - (1307 + 187));
											v86 = v74[v78];
											v84[v86[7 - 5]] = v86[3];
											v78 = v78 + (2 - 1);
											v86 = v74[v78];
											v84[v86[2]] = v86[8 - 5];
											v906 = 712 - (232 + 451);
										end
										if (v906 == 18) then
											v86 = v74[v78];
											v84[v86[2 + 0]] = v84[v86[3 + 0]];
											v78 = v78 + (565 - (510 + 54));
											v86 = v74[v78];
											v84[v86[3 - 1]] = v86[39 - (13 + 23)];
											v78 = v78 + 1;
											v86 = v74[v78];
											v84[v86[3 - 1]] = v86[3 - 0];
											v906 = 33 - 14;
										end
										if (v906 == (1108 - (830 + 258))) then
											v86 = v74[v78];
											v84[v86[2]] = v84[v86[10 - 7]];
											v78 = v78 + 1;
											v86 = v74[v78];
											v84[v86[2]] = v86[2 + 1];
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v84[v86[2]] = v86[3];
											v906 = 1462 - (860 + 581);
										end
										if ((1263 == 1263) and ((62 - 45) == v906)) then
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v907 = v86[243 - (237 + 4)];
											v84[v907] = v84[v907](v13(v84, v907 + (2 - 1), v86[6 - 3]));
											v78 = v78 + (1 - 0);
											v86 = v74[v78];
											v84[v86[2 + 0]][v86[2 + 1]] = v84[v86[15 - 11]];
											v78 = v78 + 1 + 0;
											v906 = 18;
										end
										if (((4 + 3) == v906) or (4092 == 464)) then
											v78 = v78 + 1;
											v86 = v74[v78];
											v907 = v86[1428 - (85 + 1341)];
											v84[v907] = v84[v907](v13(v84, v907 + (1 - 0), v86[8 - 5]));
											v78 = v78 + (373 - (45 + 327));
											v86 = v74[v78];
											v84[v86[3 - 1]][v86[505 - (444 + 58)]] = v84[v86[2 + 2]];
											v78 = v78 + 1 + 0;
											v906 = 4 + 4;
										end
										if (v906 == (0 - 0)) then
											v907 = nil;
											v84[v86[2]] = v84[v86[1735 - (64 + 1668)]];
											v78 = v78 + (1974 - (1227 + 746));
											v86 = v74[v78];
											v84[v86[5 - 3]] = v86[5 - 2];
											v78 = v78 + 1;
											v86 = v74[v78];
											v84[v86[496 - (415 + 79)]] = v86[1 + 2];
											v906 = 1;
										end
										if ((v906 == (493 - (142 + 349))) or (2828 < 2068)) then
											v86 = v74[v78];
											v84[v86[1 + 1]] = v84[v86[3 - 0]];
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v84[v86[2 + 0]] = v86[7 - 4];
											v78 = v78 + (1865 - (1710 + 154));
											v86 = v74[v78];
											v84[v86[320 - (200 + 118)]] = v86[2 + 1];
											v906 = 5 - 2;
										end
										if ((27 - 8) == v906) then
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v907 = v86[2 + 0];
											v84[v907] = v84[v907](v13(v84, v907 + 1 + 0, v86[3]));
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v84[v86[4 - 2]][v86[3]] = v84[v86[4]];
											v78 = v78 + (1251 - (363 + 887));
											v906 = 34 - 14;
										end
										if (v906 == (76 - 60)) then
											v86 = v74[v78];
											v84[v86[2]] = v84[v86[1 + 2]];
											v78 = v78 + (2 - 1);
											v86 = v74[v78];
											v84[v86[2 + 0]] = v86[1667 - (674 + 990)];
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v84[v86[1 + 1]] = v86[3 - 0];
											v906 = 1072 - (507 + 548);
										end
										if (v906 == (849 - (289 + 548))) then
											v86 = v74[v78];
											v84[v86[1820 - (821 + 997)]] = v84[v86[258 - (195 + 60)]];
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v84[v86[1503 - (251 + 1250)]] = v86[8 - 5];
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v84[v86[1034 - (809 + 223)]] = v86[3 - 0];
											v906 = 38 - 25;
										end
										if (v906 == 3) then
											v78 = v78 + (3 - 2);
											v86 = v74[v78];
											v907 = v86[2];
											v84[v907] = v84[v907](v13(v84, v907 + 1 + 0, v86[3]));
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v84[v86[619 - (14 + 603)]][v86[132 - (118 + 11)]] = v84[v86[1 + 3]];
											v78 = v78 + 1 + 0;
											v906 = 11 - 7;
										end
										if (v906 == (973 - (551 + 398))) then
											v86 = v74[v78];
											v84[v86[2 + 0]] = v84[v86[2 + 1]];
											v78 = v78 + 1;
											v86 = v74[v78];
											v84[v86[2 + 0]] = v86[3];
											v78 = v78 + (3 - 2);
											v86 = v74[v78];
											v84[v86[4 - 2]] = v86[1 + 2];
											v906 = 99 - 74;
										end
										if (v906 == (8 + 19)) then
											v78 = v78 + (90 - (40 + 49));
											v86 = v74[v78];
											v907 = v86[7 - 5];
											v84[v907] = v84[v907](v13(v84, v907 + (491 - (99 + 391)), v86[3 + 0]));
											v78 = v78 + 1;
											v86 = v74[v78];
											v84[v86[8 - 6]][v86[7 - 4]] = v84[v86[4 + 0]];
											v78 = v78 + 1;
											v906 = 73 - 45;
										end
										if (v906 == (1617 - (1032 + 572))) then
											v78 = v78 + (418 - (203 + 214));
											v86 = v74[v78];
											v907 = v86[1819 - (568 + 1249)];
											v84[v907] = v84[v907](v13(v84, v907 + 1, v86[3 + 0]));
											v78 = v78 + (2 - 1);
											v86 = v74[v78];
											v84[v86[7 - 5]][v86[1309 - (913 + 393)]] = v84[v86[11 - 7]];
											v78 = v78 + (1 - 0);
											v906 = 424 - (269 + 141);
										end
										if (v906 == (63 - 34)) then
											v78 = v78 + (1982 - (362 + 1619));
											v86 = v74[v78];
											v907 = v86[1627 - (950 + 675)];
											v84[v907] = v84[v907](v13(v84, v907 + 1 + 0, v86[1182 - (216 + 963)]));
											v78 = v78 + (1288 - (485 + 802));
											v86 = v74[v78];
											v84[v86[2]][v86[562 - (432 + 127)]] = v84[v86[1077 - (1065 + 8)]];
											v78 = v78 + 1 + 0;
											v906 = 30;
										end
										if ((v906 == (1609 - (635 + 966))) or (1051 > 4964)) then
											v86 = v74[v78];
											v84[v86[2]] = v84[v86[3 + 0]];
											v78 = v78 + (43 - (5 + 37));
											v86 = v74[v78];
											v84[v86[4 - 2]] = v86[2 + 1];
											v78 = v78 + (1 - 0);
											v86 = v74[v78];
											v84[v86[2]] = v86[2 + 1];
											v906 = 9;
										end
										if (v906 == (20 - 10)) then
											v86 = v74[v78];
											v84[v86[7 - 5]] = v84[v86[5 - 2]];
											v78 = v78 + (2 - 1);
											v86 = v74[v78];
											v84[v86[2 + 0]] = v86[3];
											v78 = v78 + (530 - (318 + 211));
											v86 = v74[v78];
											v84[v86[2]] = v86[14 - 11];
											v906 = 1598 - (963 + 624);
										end
										if (v906 == (5 + 6)) then
											v78 = v78 + (847 - (518 + 328));
											v86 = v74[v78];
											v907 = v86[4 - 2];
											v84[v907] = v84[v907](v13(v84, v907 + (1 - 0), v86[320 - (301 + 16)]));
											v78 = v78 + 1;
											v86 = v74[v78];
											v84[v86[5 - 3]][v86[8 - 5]] = v84[v86[4]];
											v78 = v78 + (2 - 1);
											v906 = 11 + 1;
										end
										if ((3042 < 4228) and (v906 == (18 + 12))) then
											v86 = v74[v78];
											v84[v86[3 - 1]] = v84[v86[2 + 1]];
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v84[v86[6 - 4]] = v86[1 + 2];
											v78 = v78 + 1;
											v86 = v74[v78];
											v84[v86[1021 - (829 + 190)]] = v86[10 - 7];
											v906 = 39 - 8;
										end
										if (v906 == 31) then
											v78 = v78 + (1 - 0);
											v86 = v74[v78];
											v907 = v86[2];
											v84[v907] = v84[v907](v13(v84, v907 + 1, v86[7 - 4]));
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v84[v86[1 + 1]][v86[8 - 5]] = v84[v86[4 + 0]];
											break;
										end
										if ((v906 == (635 - (520 + 93))) or (4899 <= 2526)) then
											v86 = v74[v78];
											v84[v86[278 - (259 + 17)]] = v84[v86[1 + 2]];
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v84[v86[6 - 4]] = v86[594 - (396 + 195)];
											v78 = v78 + 1;
											v86 = v74[v78];
											v84[v86[5 - 3]] = v86[3];
											v906 = 1784 - (440 + 1321);
										end
										if ((3549 < 4585) and (v906 == (1833 - (1059 + 770)))) then
											v86 = v74[v78];
											v84[v86[9 - 7]] = v84[v86[3]];
											v78 = v78 + (546 - (424 + 121));
											v86 = v74[v78];
											v84[v86[1 + 1]] = v86[3];
											v78 = v78 + (1348 - (641 + 706));
											v86 = v74[v78];
											v84[v86[1 + 1]] = v86[443 - (249 + 191)];
											v906 = 21 - 16;
										end
										if ((1240 <= 2244) and (v906 == (12 + 14))) then
											v86 = v74[v78];
											v84[v86[2]] = v84[v86[11 - 8]];
											v78 = v78 + (428 - (183 + 244));
											v86 = v74[v78];
											v84[v86[1 + 1]] = v86[733 - (434 + 296)];
											v78 = v78 + 1;
											v86 = v74[v78];
											v84[v86[5 - 3]] = v86[515 - (169 + 343)];
											v906 = 24 + 3;
										end
										if (14 == v906) then
											v86 = v74[v78];
											v84[v86[3 - 1]] = v84[v86[8 - 5]];
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v84[v86[5 - 3]] = v86[1126 - (651 + 472)];
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v84[v86[1 + 1]] = v86[3 - 0];
											v906 = 15;
										end
										if ((488 - (397 + 86)) == v906) then
											v78 = v78 + 1;
											v86 = v74[v78];
											v907 = v86[878 - (423 + 453)];
											v84[v907] = v84[v907](v13(v84, v907 + 1 + 0, v86[1 + 2]));
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v84[v86[2]][v86[3 + 0]] = v84[v86[4 + 0]];
											v78 = v78 + (1191 - (50 + 1140));
											v906 = 6 + 0;
										end
										if (v906 == (13 + 8)) then
											v78 = v78 + 1 + 0;
											v86 = v74[v78];
											v907 = v86[2 - 0];
											v84[v907] = v84[v907](v13(v84, v907 + 1 + 0, v86[3]));
											v78 = v78 + 1;
											v86 = v74[v78];
											v84[v86[598 - (157 + 439)]][v86[4 - 1]] = v84[v86[12 - 8]];
											v78 = v78 + (2 - 1);
											v906 = 22;
										end
									end
								end
							elseif (v87 <= (996 - (782 + 136))) then
								if (v87 <= (931 - (112 + 743))) then
									local v345;
									v84[v86[1173 - (1026 + 145)]] = v86[1 + 2];
									v78 = v78 + (719 - (493 + 225));
									v86 = v74[v78];
									v84[v86[2]] = v86[11 - 8];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v345 = v86[5 - 3];
									v84[v345] = v84[v345](v13(v84, v345 + 1, v86[1 + 2]));
									v78 = v78 + (2 - 1);
									v86 = v74[v78];
									v84[v86[1 + 1]][v86[4 - 1]] = v84[v86[1599 - (210 + 1385)]];
									v78 = v78 + (1690 - (1201 + 488));
									v86 = v74[v78];
									v84[v86[2 + 0]] = v84[v86[5 - 2]];
									v78 = v78 + (1 - 0);
									v86 = v74[v78];
									v84[v86[2]] = v86[588 - (352 + 233)];
									v78 = v78 + (2 - 1);
									v86 = v74[v78];
									v84[v86[2 + 0]] = v86[8 - 5];
									v78 = v78 + (575 - (489 + 85));
									v86 = v74[v78];
									v345 = v86[2];
									v84[v345] = v84[v345](v13(v84, v345 + (1502 - (277 + 1224)), v86[1496 - (663 + 830)]));
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[4 - 2]][v86[878 - (461 + 414)]] = v84[v86[1 + 3]];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[1 + 1]] = v84[v86[3 + 0]];
									v78 = v78 + (251 - (172 + 78));
									v86 = v74[v78];
									v84[v86[2 - 0]] = v86[2 + 1];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[2]] = v86[3];
									v78 = v78 + (1 - 0);
									v86 = v74[v78];
									v345 = v86[1 + 1];
									v84[v345] = v84[v345](v13(v84, v345 + 1 + 0, v86[4 - 1]));
									v78 = v78 + (1 - 0);
									v86 = v74[v78];
									v84[v86[1 + 1]][v86[2 + 1]] = v84[v86[4]];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[7 - 5]] = v84[v86[6 - 3]];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[1 + 1]] = v86[3];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[449 - (133 + 314)]] = v86[3];
									v78 = v78 + 1;
									v86 = v74[v78];
									v345 = v86[1 + 1];
									v84[v345] = v84[v345](v13(v84, v345 + (214 - (199 + 14)), v86[10 - 7]));
									v78 = v78 + (1550 - (647 + 902));
									v86 = v74[v78];
									v84[v86[2]][v86[8 - 5]] = v84[v86[237 - (85 + 148)]];
									v78 = v78 + (1290 - (426 + 863));
									v86 = v74[v78];
									v84[v86[9 - 7]] = v84[v86[3]];
									v78 = v78 + (1655 - (873 + 781));
									v86 = v74[v78];
									v84[v86[2 - 0]] = v86[7 - 4];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[7 - 5]] = v86[3 - 0];
									v78 = v78 + (2 - 1);
									v86 = v74[v78];
									v345 = v86[1949 - (414 + 1533)];
									v84[v345] = v84[v345](v13(v84, v345 + 1 + 0, v86[3]));
									v78 = v78 + (556 - (443 + 112));
									v86 = v74[v78];
									v84[v86[1481 - (888 + 591)]][v86[3]] = v84[v86[4]];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[5 - 3]] = v84[v86[1 + 2]];
									v78 = v78 + (3 - 2);
									v86 = v74[v78];
									v84[v86[2]] = v86[2 + 1];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[1 + 1]] = v86[1 + 2];
									v78 = v78 + (1 - 0);
									v86 = v74[v78];
									v345 = v86[3 - 1];
									v84[v345] = v84[v345](v13(v84, v345 + (1679 - (136 + 1542)), v86[9 - 6]));
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[2 - 0]][v86[3]] = v84[v86[3 + 1]];
									v78 = v78 + (487 - (68 + 418));
									v86 = v74[v78];
									v84[v86[4 - 2]] = v84[v86[5 - 2]];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[2 + 0]] = v86[1095 - (770 + 322)];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[1 + 1]] = v86[1 + 2];
									v78 = v78 + (1 - 0);
									v86 = v74[v78];
									v345 = v86[3 - 1];
									v84[v345] = v84[v345](v13(v84, v345 + 1, v86[7 - 4]));
									v78 = v78 + (3 - 2);
									v86 = v74[v78];
									v84[v86[2]][v86[2 + 1]] = v84[v86[4]];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[2 - 0]] = v84[v86[2 + 1]];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[2 + 0]] = v86[11 - 8];
									v78 = v78 + (1 - 0);
									v86 = v74[v78];
									v84[v86[1 + 1]] = v86[13 - 10];
									v78 = v78 + (3 - 2);
									v86 = v74[v78];
									v345 = v86[1 + 1];
									v84[v345] = v84[v345](v13(v84, v345 + (4 - 3), v86[834 - (762 + 69)]));
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[6 - 4]][v86[3 + 0]] = v84[v86[3 + 1]];
									v78 = v78 + (2 - 1);
									v86 = v74[v78];
									v84[v86[1 + 1]] = v84[v86[3]];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[7 - 5]] = v86[160 - (8 + 149)];
									v78 = v78 + (1321 - (1199 + 121));
									v86 = v74[v78];
									v84[v86[3 - 1]] = v86[3];
									v78 = v78 + 1;
									v86 = v74[v78];
									v345 = v86[4 - 2];
									v84[v345] = v84[v345](v13(v84, v345 + 1 + 0, v86[10 - 7]));
									v78 = v78 + (2 - 1);
									v86 = v74[v78];
									v84[v86[2]][v86[3 + 0]] = v84[v86[1811 - (518 + 1289)]];
									v78 = v78 + (1 - 0);
									v86 = v74[v78];
									v84[v86[1 + 1]] = v84[v86[3 - 0]];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[471 - (304 + 165)]] = v86[3 + 0];
									v78 = v78 + (161 - (54 + 106));
									v86 = v74[v78];
									v84[v86[1971 - (1618 + 351)]] = v86[3];
									v78 = v78 + 1;
									v86 = v74[v78];
									v345 = v86[2 + 0];
									v84[v345] = v84[v345](v13(v84, v345 + (1017 - (10 + 1006)), v86[1 + 2]));
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[6 - 4]][v86[1036 - (912 + 121)]] = v84[v86[2 + 2]];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[2]] = v84[v86[1292 - (1140 + 149)]];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[2 - 0]] = v86[1 + 2];
									v78 = v78 + (3 - 2);
									v86 = v74[v78];
									v84[v86[3 - 1]] = v86[3];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v345 = v86[6 - 4];
									v84[v345] = v84[v345](v13(v84, v345 + (187 - (165 + 21)), v86[114 - (61 + 50)]));
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[9 - 7]][v86[5 - 2]] = v84[v86[2 + 2]];
									v78 = v78 + (1461 - (1295 + 165));
									v86 = v74[v78];
									v84[v86[1 + 1]] = v84[v86[2 + 1]];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[1399 - (819 + 578)]] = v86[1405 - (331 + 1071)];
									v78 = v78 + (744 - (588 + 155));
									v86 = v74[v78];
									v84[v86[2]] = v86[1285 - (546 + 736)];
									v78 = v78 + (1938 - (1834 + 103));
									v86 = v74[v78];
									v345 = v86[2 + 0];
									v84[v345] = v84[v345](v13(v84, v345 + 1, v86[8 - 5]));
									v78 = v78 + (1767 - (1536 + 230));
									v86 = v74[v78];
									v84[v86[493 - (128 + 363)]][v86[1 + 2]] = v84[v86[9 - 5]];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[1 + 1]] = v84[v86[4 - 1]];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[5 - 3]] = v86[3];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[4 - 2]] = v86[3 + 0];
									v78 = v78 + (1010 - (615 + 394));
									v86 = v74[v78];
									v345 = v86[2];
									v84[v345] = v84[v345](v13(v84, v345 + 1 + 0, v86[3 + 0]));
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[2]][v86[9 - 6]] = v84[v86[18 - 14]];
									v78 = v78 + (652 - (59 + 592));
									v86 = v74[v78];
									v84[v86[2]] = v84[v86[6 - 3]];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[3 - 1]] = v86[3 + 0];
									v78 = v78 + (172 - (70 + 101));
									v86 = v74[v78];
									v84[v86[4 - 2]] = v86[3 + 0];
									v78 = v78 + (2 - 1);
									v86 = v74[v78];
									v345 = v86[2];
									v84[v345] = v84[v345](v13(v84, v345 + (242 - (123 + 118)), v86[3]));
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[1 + 1]][v86[3]] = v84[v86[1403 - (653 + 746)]];
									v78 = v78 + (1 - 0);
									v86 = v74[v78];
									v84[v86[2]] = v84[v86[3]];
									v78 = v78 + (1 - 0);
									v86 = v74[v78];
									v84[v86[5 - 3]] = v86[3];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[2 + 0]] = v86[3 + 0];
									v78 = v78 + 1;
									v86 = v74[v78];
									v345 = v86[1 + 1];
									v84[v345] = v84[v345](v13(v84, v345 + 1 + 0, v86[3]));
									v78 = v78 + (2 - 1);
									v86 = v74[v78];
									v84[v86[2 + 0]][v86[4 - 1]] = v84[v86[1238 - (885 + 349)]];
									v78 = v78 + 1 + 0;
									v86 = v74[v78];
									v84[v86[4 - 2]] = v86[8 - 5];
									v78 = v78 + (969 - (915 + 53));
									v86 = v74[v78];
									for v507 = v86[803 - (768 + 33)], v86[11 - 8] do
										v84[v507] = nil;
									end
								elseif (v87 > (134 - 57)) then
									local v908 = 328 - (287 + 41);
									while true do
										if (v908 == (847 - (638 + 209))) then
											v63[v86[3]] = v84[v86[2 + 0]];
											v78 = v78 + 1;
											v86 = v74[v78];
											v84[v86[1688 - (96 + 1590)]] = v63[v86[1675 - (741 + 931)]];
											v908 = 1 + 0;
										end
										if ((v908 == (2 - 1)) or (451 > 4866)) then
											v78 = v78 + (4 - 3);
											v86 = v74[v78];
											v84[v86[1 + 1]] = v63[v86[2 + 1]];
											v78 = v78 + 1 + 0;
											v908 = 7 - 5;
										end
										if (v908 == (1 + 2)) then
											v84[v86[1 + 1]][v86[3]] = v84[v86[16 - 12]];
											v78 = v78 + 1;
											v86 = v74[v78];
											v84[v86[2]] = v86[3 + 0];
											break;
										end
										if (v908 == (496 - (64 + 430))) then
											v86 = v74[v78];
											v84[v86[2 + 0]] = v84[v86[3]][v86[4]];
											v78 = v78 + (364 - (106 + 257));
											v86 = v74[v78];
											v908 = 3 + 0;
										end
									end
								else
									do
										return;
									end
								end
							elseif (v87 <= (800 - (496 + 225))) then
								local v419;
								v84[v86[2]] = v64[v86[3]];
								v78 = v78 + (1 - 0);
								v86 = v74[v78];
								v84[v86[9 - 7]] = v84[v86[3]][v86[4]];
								v78 = v78 + (1659 - (256 + 1402));
								v86 = v74[v78];
								v84[v86[1901 - (30 + 1869)]] = v84[v86[3]][v86[1373 - (213 + 1156)]];
								v78 = v78 + (189 - (96 + 92));
								v86 = v74[v78];
								v84[v86[1 + 1]] = v84[v86[902 - (142 + 757)]];
								v78 = v78 + 1 + 0;
								v86 = v74[v78];
								v419 = v86[1 + 1];
								v84[v419] = v84[v419](v13(v84, v419 + (80 - (32 + 47)), v86[1980 - (1053 + 924)]));
								v78 = v78 + 1 + 0;
								v86 = v74[v78];
								v84[v86[2]] = v84[v86[4 - 1]];
								v78 = v78 + 1;
								v86 = v74[v78];
								v84[v86[2]] = v86[3];
							elseif ((v87 > (1728 - (685 + 963))) or (1642 <= 392)) then
								local v909;
								v84[v86[3 - 1]] = v64[v86[3 - 0]];
								v78 = v78 + (1710 - (541 + 1168));
								v86 = v74[v78];
								v84[v86[1599 - (645 + 952)]] = v84[v86[841 - (669 + 169)]][v86[13 - 9]];
								v78 = v78 + (1 - 0);
								v86 = v74[v78];
								v84[v86[1 + 1]] = v86[1 + 2];
								v78 = v78 + (766 - (181 + 584));
								v86 = v74[v78];
								v84[v86[1397 - (665 + 730)]] = v86[8 - 5];
								v78 = v78 + (1 - 0);
								v86 = v74[v78];
								v84[v86[1352 - (540 + 810)]] = v86[3];
								v78 = v78 + (3 - 2);
								v86 = v74[v78];
								v84[v86[2]] = v86[3];
								v78 = v78 + (2 - 1);
								v86 = v74[v78];
								v909 = v86[2];
								v84[v909] = v84[v909](v13(v84, v909 + 1 + 0, v86[206 - (166 + 37)]));
								v78 = v78 + 1;
								v86 = v74[v78];
								v84[v86[1883 - (22 + 1859)]][v86[1775 - (843 + 929)]] = v84[v86[266 - (30 + 232)]];
								v78 = v78 + (2 - 1);
								v86 = v74[v78];
								v84[v86[2]] = v64[v86[3]];
								v78 = v78 + (778 - (55 + 722));
								v86 = v74[v78];
								v84[v86[3 - 1]] = v84[v86[1678 - (78 + 1597)]][v86[1 + 3]];
							else
								v84[v86[2 + 0]] = v63[v86[3]];
								v78 = v78 + 1 + 0;
								v86 = v74[v78];
								v84[v86[551 - (305 + 244)]] = v63[v86[3 + 0]];
								v78 = v78 + (106 - (95 + 10));
								v86 = v74[v78];
								v84[v86[2 + 0]] = v84[v86[3]][v86[4]];
								v78 = v78 + (3 - 2);
								v86 = v74[v78];
								v84[v86[2 - 0]][v86[765 - (592 + 170)]] = v84[v86[13 - 9]];
								v78 = v78 + (2 - 1);
								v86 = v74[v78];
								v84[v86[2]] = v86[2 + 1];
							end
						elseif (v87 <= (34 + 53)) then
							if ((2519 == 2519) and (v87 <= (202 - 118))) then
								if (v87 <= (14 + 68)) then
									v84[v86[3 - 1]] = v84[v86[510 - (353 + 154)]][v86[5 - 1]];
								elseif (v87 > (112 - 29)) then
									if not v84[v86[2 + 0]] then
										v78 = v78 + 1 + 0;
									else
										v78 = v86[3];
									end
								else
									v84[v86[2 + 0]] = v84[v86[3 - 0]][v86[4]];
									v78 = v78 + (1 - 0);
									v86 = v74[v78];
									v84[v86[2]] = v64[v86[6 - 3]];
									v78 = v78 + (87 - (7 + 79));
									v86 = v74[v78];
									v84[v86[1 + 1]] = v84[v86[184 - (24 + 157)]][v86[7 - 3]];
									v78 = v78 + 1;
									v86 = v74[v78];
									v84[v86[4 - 2]] = v84[v86[3]][v86[2 + 2]];
									v78 = v78 + (2 - 1);
									v86 = v74[v78];
									if (v84[v86[382 - (262 + 118)]] == v84[v86[4]]) then
										v78 = v78 + 1;
									else
										v78 = v86[1086 - (1038 + 45)];
									end
								end
							elseif (v87 <= (183 - 98)) then
								local v435;
								v84[v86[232 - (19 + 211)]] = v84[v86[116 - (88 + 25)]][v86[9 - 5]];
								v78 = v78 + 1 + 0;
								v86 = v74[v78];
								v84[v86[2 + 0]] = v86[1039 - (1007 + 29)];
								v78 = v78 + 1 + 0;
								v86 = v74[v78];
								v84[v86[4 - 2]] = v86[14 - 11];
								v78 = v78 + 1 + 0;
								v86 = v74[v78];
								v84[v86[813 - (340 + 471)]] = v86[7 - 4];
								v78 = v78 + (590 - (276 + 313));
								v86 = v74[v78];
								v84[v86[4 - 2]] = v86[3 + 0];
								v78 = v78 + 1 + 0;
								v86 = v74[v78];
								v435 = v86[2];
								v84[v435] = v84[v435](v13(v84, v435 + 1 + 0, v86[1975 - (495 + 1477)]));
								v78 = v78 + (2 - 1);
								v86 = v74[v78];
								v84[v86[2]][v86[2 + 1]] = v84[v86[4]];
								v78 = v78 + 1;
								v86 = v74[v78];
								v84[v86[405 - (342 + 61)]] = v64[v86[2 + 1]];
								v78 = v78 + 1;
								v86 = v74[v78];
								v84[v86[167 - (4 + 161)]] = v84[v86[2 + 1]][v86[12 - 8]];
								v78 = v78 + 1;
								v86 = v74[v78];
								v84[v86[2]] = v86[7 - 4];
							elseif (v87 == (583 - (322 + 175))) then
								local v947;
								v84[v86[2]] = v63[v86[566 - (173 + 390)]];
								v78 = v78 + 1;
								v86 = v74[v78];
								v84[v86[1 + 1]] = v84[v86[3]][v86[318 - (203 + 111)]];
								v78 = v78 + 1 + 0;
								v86 = v74[v78];
								v84[v86[2 + 0]][v86[3]] = v84[v86[11 - 7]];
								v78 = v78 + 1 + 0;
								v86 = v74[v78];
								v84[v86[2]] = v63[v86[709 - (57 + 649)]];
								v78 = v78 + (385 - (328 + 56));
								v86 = v74[v78];
								v84[v86[1 + 1]] = v64[v86[515 - (433 + 79)]];
								v78 = v78 + 1 + 0;
								v86 = v74[v78];
								v84[v86[2 + 0]] = v84[v86[9 - 6]][v86[18 - 14]];
								v78 = v78 + 1 + 0;
								v86 = v74[v78];
								v84[v86[2 + 0]] = v86[1039 - (562 + 474)];
								v78 = v78 + 1;
								v86 = v74[v78];
								v84[v86[4 - 2]] = v86[5 - 2];
								v78 = v78 + (906 - (76 + 829));
								v86 = v74[v78];
								v84[v86[1675 - (1506 + 167)]] = v86[5 - 2];
								v78 = v78 + (267 - (58 + 208));
								v86 = v74[v78];
								v947 = v86[2];
								v84[v947] = v84[v947](v13(v84, v947 + 1 + 0, v86[3]));
								v78 = v78 + 1;
								v86 = v74[v78];
								v84[v86[2 + 0]][v86[2 + 1]] = v84[v86[16 - 12]];
								v78 = v78 + 1;
								v86 = v74[v78];
								v84[v86[2]] = v86[340 - (258 + 79)];
							else
								v84[v86[1 + 1]] = v84[v86[5 - 2]] % v84[v86[1474 - (1219 + 251)]];
							end
						elseif ((2932 <= 4411) and (v87 <= (1761 - (1231 + 440)))) then
							if (v87 <= (146 - (34 + 24))) then
								v84[v86[2 + 0]] = not v84[v86[5 - 2]];
								v78 = v78 + 1;
								v86 = v74[v78];
								v63[v86[2 + 1]] = v84[v86[5 - 3]];
								v78 = v78 + (3 - 2);
								v86 = v74[v78];
								v84[v86[5 - 3]] = v63[v86[3]];
								v78 = v78 + (3 - 2);
								v86 = v74[v78];
								v84[v86[2]] = v63[v86[6 - 3]];
								v78 = v78 + 1;
								v86 = v74[v78];
								v84[v86[1591 - (877 + 712)]] = not v84[v86[2 + 1]];
								v78 = v78 + 1;
								v86 = v74[v78];
								v84[v86[756 - (242 + 512)]][v86[3]] = v84[v86[8 - 4]];
								v78 = v78 + 1;
								v86 = v74[v78];
								v84[v86[629 - (92 + 535)]] = v86[3];
							elseif (v87 == (71 + 18)) then
								local v969 = 0 - 0;
								local v970;
								local v971;
								local v972;
								local v973;
								while true do
									if (v969 == (1 + 0)) then
										v79 = (v972 + v970) - 1;
										v973 = 0 - 0;
										v969 = 2 + 0;
									end
									if (0 == v969) then
										v970 = v86[2 + 0];
										v971, v972 = v77(v84[v970](v13(v84, v970 + 1, v86[1 + 2])));
										v969 = 1 - 0;
									end
									if ((v969 == 2) or (102 > 4278)) then
										for v1543 = v970, v79 do
											v973 = v973 + (1 - 0);
											v84[v1543] = v971[v973];
										end
										break;
									end
								end
							else
								v84[v86[1787 - (1476 + 309)]] = v64[v86[1287 - (299 + 985)]];
							end
						elseif ((v87 <= (22 + 69)) or (1765 <= 1197)) then
							local v467;
							v84[v86[2]] = v84[v86[9 - 6]][v86[97 - (86 + 7)]];
							v78 = v78 + 1;
							v86 = v74[v78];
							v84[v86[2]] = v86[12 - 9];
							v78 = v78 + 1;
							v86 = v74[v78];
							v84[v86[1 + 1]] = v86[883 - (672 + 208)];
							v78 = v78 + 1 + 0;
							v86 = v74[v78];
							v84[v86[134 - (14 + 118)]] = v86[448 - (339 + 106)];
							v78 = v78 + 1;
							v86 = v74[v78];
							v84[v86[2 + 0]] = v86[2 + 1];
							v78 = v78 + (1396 - (440 + 955));
							v86 = v74[v78];
							v467 = v86[2 + 0];
							v84[v467] = v84[v467](v13(v84, v467 + (1 - 0), v86[1 + 2]));
							v78 = v78 + (2 - 1);
							v86 = v74[v78];
							v84[v86[2]][v86[3 + 0]] = v84[v86[357 - (260 + 93)]];
							v78 = v78 + 1 + 0;
							v86 = v74[v78];
							v84[v86[4 - 2]] = v84[v86[4 - 1]][v86[1978 - (1181 + 793)]];
							v78 = v78 + 1 + 0;
							v86 = v74[v78];
							v84[v86[309 - (105 + 202)]][v86[3 + 0]] = v84[v86[4]];
							v78 = v78 + 1;
							v86 = v74[v78];
							v84[v86[812 - (352 + 458)]] = v86[11 - 8];
						elseif (v87 > (234 - 142)) then
							local v976 = 0 + 0;
							local v977;
							while true do
								if (v976 == (0 - 0)) then
									v977 = v86[951 - (438 + 511)];
									v84[v977](v13(v84, v977 + (1384 - (1262 + 121)), v79));
									break;
								end
							end
						else
							v84[v86[1070 - (728 + 340)]] = v63[v86[1793 - (816 + 974)]];
						end
						v78 = v78 + (2 - 1);
						break;
					end
					if (v107 == 0) then
						v86 = v74[v78];
						v87 = v86[3 - 2];
						v107 = 340 - (163 + 176);
					end
				end
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return vv9(), ...);
